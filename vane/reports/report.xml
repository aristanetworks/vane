<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="100872f5073d" name="pytest" skipped="0" tests="10" time="5.796" timestamp="2020-10-06T23:31:58.069095"><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.228"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.190"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.186"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.188"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.177"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[bn305]" time="1.406"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[bn305]" time="1.381"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[bn305]" time="1.115"><failure message="AssertionError: assert [&apos;powerLoss&apos;,...werLoss&apos;, ...] == [&apos;ok&apos;, &apos;ok&apos;, ...k&apos;, &apos;ok&apos;, ...]
  At index 0 diff: &apos;powerLoss&apos; != &apos;ok&apos;
  Full diff:
  - [&apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;]
  + [&apos;powerLoss&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;powerLoss&apos;, &apos;ok&apos;, &apos;powerLoss&apos;, &apos;ok&apos;, &apos;powerLoss&apos;]">self = &lt;bin.tests.environment.test_environment.EnvironmentTests object at 0x7f45f0e61a60&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://172.30.146.38:443//command-api)), &apos;name&apos;: &apos;bn305&apos;, &apos;ou...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_system_environment_power_are_in_spec_on_(self,
                                                         dut,
                                                         tests_definitions):
        &quot;&quot;&quot; Verify system power environmentals are functional within spec
            Args:
              dut (dict): Encapsulates dut details including name, connection
              tests_definitions (dict): Test parameters
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        if not tests_tools.verify_veos(dut):
            tops.return_show_cmd(&quot;show system environment power&quot;)
            power_supplies = tops.show_output[&quot;powerSupplies&quot;]
            print(f&quot;\nOn router |{tops.dut_name}|&quot;)
    
            for powersupply in power_supplies:
                tops.actual_output = power_supplies[powersupply][&apos;state&apos;]
                tops.test_result = tops.actual_output == tops.expected_output
    
                tops.output_msg += (f&quot;Power-Supply {powersupply} state is &quot;
                                    f&quot;|{tops.actual_output}|, should be in &quot;
                                    f&quot;|{tops.expected_output}|.\n&quot;)
                tops.comment += (f&apos;TEST is power-supply |{powersupply}| &apos;
                                 &apos;functioning within spec.\n&apos;
                                 f&apos;GIVEN power state is |{tops.expected_output}|.\n&apos;
                                 f&apos;WHEN power state is |{tops.actual_output}|.\n&apos;
                                 f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
                tops.actual_results.append(tops.actual_output)
                tops.expected_results.append(tops.expected_output)
    
            tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
    
        else:
            tops.test_result = True
    
            tops.output_msg += (&quot;INVALID TEST: CloudEOS router &quot;
                                f&quot;|{tops.dut_name}| doesnt have &quot;
                                &quot;power-supplies.\n&quot;)
            tops.comment += (&quot;INVALID TEST: CloudEOS router &quot;
                             f&quot;|{tops.dut_name}| doesnt have &quot;
                             &quot;power-supplies.\n&quot;)
    
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       AssertionError: assert [&apos;powerLoss&apos;,...werLoss&apos;, ...] == [&apos;ok&apos;, &apos;ok&apos;, ...k&apos;, &apos;ok&apos;, ...]
E         At index 0 diff: &apos;powerLoss&apos; != &apos;ok&apos;
E         Full diff:
E         - [&apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;ok&apos;]
E         + [&apos;powerLoss&apos;, &apos;ok&apos;, &apos;ok&apos;, &apos;powerLoss&apos;, &apos;ok&apos;, &apos;powerLoss&apos;, &apos;ok&apos;, &apos;powerLoss&apos;]

tests/environment/test_environment.py:193: AssertionError</failure></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[bn305]" time="0.193"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[bn305]" time="0.207"></testcase></testsuite></testsuites>