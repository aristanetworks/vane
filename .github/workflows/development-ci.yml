name: development-ci
run-name: ${{ github.actor }} CI development run

on: [push]

jobs:
  changedfiles:

    runs-on: ubuntu-latest

    outputs:
      base: ${{ steps.changes.outputs.base }}
      all: ${{ steps.changes.outputs.all }}

    steps:
      # Check out the repository
      - uses: actions/checkout@v3

      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          # architecture: 'x64' # The default

      - name: Display the Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black==22.12.0 flake8==5.0.4 pylint==2.16.2

      - name: Get changed files
        id: changes
        run: |
          echo "base=$(git merge-base --fork-point develop ${{ github.ref_name }})" >> $GITHUB_OUTPUT
          echo "all=$(git diff --name-only --diff-filter=ACMRT ${{ steps.changes.output.base }} ${{ github.sha }} | xargs)" >> $GITHUB_STATE

  validate:
    runs-on: ubuntu-latest
    needs: changedfiles
    if: ${{ needs.changedfiles.outputs.all }}
    steps:
      # Run Black on the whole repo
      - name: Run Black to check the code for formatting problems
        # If any code needs reformatting, black returns an exit code of 1,
        # which fails the action
        run: black --check ${{ steps.changes.outputs.all }}

      # Run flake8 on the vane and tests directories
      - name: Lint with flake8
        run: flake8 ${{ steps.changes.outputs.all }}

      # Run pylint on the vane and tests directories
      - name: Lint with pylint
        run: pylint ${{ steps.changes.outputs.all }}
