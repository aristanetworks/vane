<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="10" skipped="2" tests="124" time="32.738" timestamp="2020-12-02T19:12:51.210960" hostname="a329c4a11ab0"><testcase classname="tests.test_pytest.PyTestTests" name="test_assert_true[kg-topology-CloudEosRR1]" time="0.008" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_authentication_counters_are_incrementing_on_[kg-topology-CloudEosRR1]" time="0.003"><skipped type="pytest.skip" message="No AAA setup on DUTs">/project/vane/bin/tests/aaa/test_aaa.py:51: No AAA setup on DUTs</skipped></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_commands_authorization_methods_set_on_[kg-topology-CloudEosRR1]" time="0.399" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_authorization_methods_set_on_[kg-topology-CloudEosRR1]" time="0.462" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_aaa_session_logging_is_working_on_[kg-topology-CloudEosRR1]" time="0.537" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_login_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.464" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.463" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_default_login_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.447" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_system_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.393" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.356" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_enable_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.361" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.357" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[kg-topology-CloudEosRR1]" time="0.478" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_priviledge_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.342" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[kg-topology-CloudEosRR1]" time="0.435" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[kg-topology-CloudEosRR1]" time="0.457" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[kg-topology-CloudEosRR1]" time="0.341" /><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[kg-topology-CloudEosRR1]" time="0.454" /><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[kg-topology-CloudEosRR1]" time="0.452" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[kg-topology-CloudEosRR1]" time="0.356" /><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[kg-topology-CloudEosRR1]" time="0.454" /><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[kg-topology-CloudEosRR1]" time="0.404" /><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[kg-topology-CloudEosRR1]" time="0.361" /><testcase classname="tests.dns.test_dns.DNSTests" name="test_dns_configuration_on_[kg-topology-CloudEosRR1]" time="1.144" /><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_resolves_on_[kg-topology-CloudEosRR1]" time="1.495" /><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_servers_are_reachable_on_[kg-topology-CloudEosRR1]" time="5.184"><failure message="assert [False] == [True]&#10;  At index 0 diff: False != True&#10;  Full diff:&#10;  - [True]&#10;  + [False]">self = &lt;vane.bin.tests.dns.test_dns.DNSTests object at 0x7f3d52898fa0&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.129.242.29:443//command-api)), 'name': 'kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_dns_servers_are_reachable_on_(self, dut, tests_definitions):
        """ Verifies DNS servers are reachable via ping
    
            Args:
              dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
        dns_servers = tops.test_parameters["dns_servers"]
        dns_vrf = tops.test_parameters["dns_vrf"]
    
        for dns_server in dns_servers:
            if dns_vrf:
                show_cmd = f"ping vrf {dns_vrf} ip {dns_server}"
            else:
                show_cmd = f"ping {dns_server}"
    
            tops.return_show_cmd(show_cmd)
            tops.actual_output = 'bytes from' in tops.show_cmd_txt
            tops.test_result = tops.actual_output is tops.expected_output
    
            tops.output_msg += (f"\nOn router |{tops.dut_name}|, verifying NTP "
                                f"server reachability for |{dns_server}| is "
                                f"|{tops.test_result}|.\n")
    
            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '
                             f'GIVEN server |{dns_server}|.\n'
                             'WHEN exception is |bytes from| '
                             'string.\n'
                             f'THEN test case result is |{tops.test_result}|.\n'
                             f'OUTPUT of |{show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [False] == [True]
E         At index 0 diff: False != True
E         Full diff:
E         - [True]
E         + [False]

tests/dns/test_dns.py:131: AssertionError</failure></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEosRR1]" time="0.288" /><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_installed_on_[kg-topology-CloudEosRR1]" time="0.316" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.332" /><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_erroring_on_[kg-topology-CloudEosRR1]" time="0.317" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.313" /><testcase classname="tests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[kg-topology-CloudEosRR1]" time="0.940" /><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_system_name_is_correct_on_[kg-topology-CloudEosRR1]" time="0.320" /><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_max_frame_size_is_correct_on_[kg-topology-CloudEosRR1]" time="0.312"><failure message="assert [9236] == [10200]&#10;  At index 0 diff: 9236 != 10200&#10;  Full diff:&#10;  - [10200]&#10;  + [9236]">self = &lt;vane.bin.tests.lldp.test_lldp.LldpLocalInfoTests object at 0x7ff1983027c0&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.129.242.29:443//command-api)), 'name': 'kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_lldp_max_frame_size_is_correct_on_(self, dut, tests_definitions):
        """  Verify show lldp local-info maxFrameSize is correct
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f"\nOn router |{tops.dut_name}|:")
    
        for interface in tops.interface_list:
            interface_name = interface['interface_name'].replace(" ", "")
            int_ptr = dut["output"][tops.show_cmd]["json"]['localInterfaceInfo']
            tops.actual_output = int_ptr[interface_name]['maxFrameSize']
    
            tops.output_msg += (f"On interface |{interface_name}|: LLDP local-info "
                                f"maxFrameSize is |{tops.actual_output}|, correct "
                                f"maxFrameSize is |{tops.expected_output}|.\n\n")
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.comment += (f'TEST if |{tops.dut_name}| LLDP maxFrameSize is correct '
                             f'on interface |{interface_name}|.\n'
                             f'GIVEN LLDP maxFrameSize is |{tops.expected_output}|.\n'
                             f'WHEN LLDP maxFrameSize is |{tops.actual_output}|.\n'
                             f'THEN test case result is |{tops.test_result}|.\n\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f'OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [9236] == [10200]
E         At index 0 diff: 9236 != 10200
E         Full diff:
E         - [10200]
E         + [9236]

tests/lldp/test_lldp.py:203: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_interface_id_is_correct_on_[kg-topology-CloudEosRR1]" time="0.303" /><testcase classname="tests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[kg-topology-CloudEosRR1]" time="0.315" /><testcase classname="tests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[kg-topology-CloudEosRR1]" time="0.356" /><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[kg-topology-CloudEosRR1]" time="0.304" /><testcase classname="tests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[kg-topology-CloudEosRR1]" time="0.424" /><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[kg-topology-CloudEosRR1]" time="0.412" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_is_synchronized_on_[kg-topology-CloudEosRR1]" time="0.308" /><testcase classname="tests.interface.test_interface.InterfacePhyTests" name="test_if_intf_phy_status_connected_on_[kg-topology-CloudEosRR1]" time="0.306" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_associated_with_peers_on_[kg-topology-CloudEosRR1]" time="0.333" /><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_if_interface_errors_on_[kg-topology-CloudEosRR1]" time="0.333" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_process_is_running_on_[kg-topology-CloudEosRR1]" time="0.401" /><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_interface_utilization_on_[kg-topology-CloudEosRR1]" time="0.326" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_ntp_configuration_on_[kg-topology-CloudEosRR1]" time="0.793" /><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_out_counters_are_discarding_on_[kg-topology-CloudEosRR1]" time="0.383" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.353" /><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_in_counters_are_discarding_on_[kg-topology-CloudEosRR1]" time="0.333" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.368" /><testcase classname="tests.interface.test_interface.InterfaceMtuTests" name="test_if_intf_mtu_is_correct_on_[kg-topology-CloudEosRR1]" time="0.413"><failure message="assert [1500] == [10178]&#10;  At index 0 diff: 1500 != 10178&#10;  Full diff:&#10;  - [10178]&#10;  + [1500]">self = &lt;vane.bin.tests.interface.test_interface.InterfaceMtuTests object at 0x7f8957f1c340&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.129.242.29:443//command-api)), 'name': 'kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_intf_mtu_is_correct_on_(self, dut, tests_definitions):
        """  Verify the interfaces of interest have no inDiscards
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f"\nOn router |{tops.dut_name}|:")
    
        for interface in tops.interface_list:
            interface_name = interface['interface_name'].replace(" ", "")
            int_ptr = dut["output"][tops.show_cmd]['json']['interfaces']
            tops.actual_output = int_ptr[interface_name]['mtu']
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.output_msg += (f"On interface |{interface_name}|: interface "
                                f"MTU is |{tops.actual_output}|, correct MTU is "
                                f"|{tops.expected_output}|.\n\n")
            tops.comment += (f'TEST if interface |{interface_name}| MTU is correct '
                             f'on |{tops.dut_name}|.\n'
                             f'GIVEN MTU of |{tops.expected_output}|.\n'
                             f'WHEN interface MTU is |{tops.actual_output}|.\n'
                             f'THEN test case result is |{tops.test_result}|.\n\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f'OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [1500] == [10178]
E         At index 0 diff: 1500 != 10178
E         Full diff:
E         - [10178]
E         + [1500]

tests/interface/test_interface.py:605: AssertionError</failure></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_servers_are_reachable_on_[kg-topology-CloudEosRR1]" time="4.968"><failure message="assert [False] == [True]&#10;  At index 0 diff: False != True&#10;  Full diff:&#10;  - [True]&#10;  + [False]">self = &lt;vane.bin.tests.ntp.test_ntp.NTPTests object at 0x7ff198336ee0&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.129.242.29:443//command-api)), 'name': 'kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_ntp_servers_are_reachable_on_(self, dut, tests_definitions):
        """ Verifies DNS servers are reachable via ping
    
            Args:
              dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
        ntp_servers = tops.test_parameters["ntp_servers"]
        ntp_vrf = tops.test_parameters["ntp_vrf"]
    
        for ntp_server in ntp_servers:
            if ntp_vrf:
                show_cmd = f"ping vrf {ntp_vrf} ip {ntp_server}"
            else:
                show_cmd = f"ping {ntp_server}"
    
            tops.return_show_cmd(show_cmd)
            tops.actual_output = 'bytes from' in tops.show_cmd_txt
            tops.test_result = tops.actual_output is tops.expected_output
    
            tops.output_msg += (f"\nOn router |{tops.dut_name}|, verifying NTP "
                                f"server reachability for |{ntp_server}| is "
                                f"|{tops.test_result}|.\n")
    
            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '
                             f'GIVEN server |{ntp_server}|.\n'
                             'WHEN exception is |bytes from| '
                             'string.\n'
                             f'THEN test case result is |{tops.test_result}|.\n'
                             f'OUTPUT of |{show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [False] == [True]
E         At index 0 diff: False != True
E         Full diff:
E         - [True]
E         + [False]

tests/ntp/test_ntp.py:250: AssertionError</failure></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_sending_messages_on_[kg-topology-CloudEosRR1]" time="0.326" /><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_rx_is_enabled_on_[kg-topology-CloudEosRR1]" time="0.317" /><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_receiving_messages_on_[kg-topology-CloudEosRR1]" time="0.289" /><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_tx_is_enabled_on_[kg-topology-CloudEosRR1]" time="0.318" /><testcase classname="tests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[kg-topology-CloudEosRR1]" time="0.327" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_default_login_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.318" /><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[kg-topology-CloudEosRR1]" time="0.333" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_login_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.304" /><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[kg-topology-CloudEosRR1]" time="0.307" /><testcase classname="tests.test_pytest.PyTestTests" name="test_assert_true[kg-topology-CloudEosRR2]" time="0.002" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_authentication_counters_are_incrementing_on_[kg-topology-CloudEosRR2]" time="0.001"><skipped type="pytest.skip" message="No AAA setup on DUTs">/project/vane/bin/tests/aaa/test_aaa.py:51: No AAA setup on DUTs</skipped></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.320" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_aaa_session_logging_is_working_on_[kg-topology-CloudEosRR2]" time="0.307" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_enable_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.338" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_commands_authorization_methods_set_on_[kg-topology-CloudEosRR2]" time="0.341" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_system_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.283" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_authorization_methods_set_on_[kg-topology-CloudEosRR2]" time="0.276" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.286" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[kg-topology-CloudEosRR2]" time="0.311" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_priviledge_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.291" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[kg-topology-CloudEosRR2]" time="0.323" /><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.296" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[kg-topology-CloudEosRR2]" time="0.308" /><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[kg-topology-CloudEosRR2]" time="0.389" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[kg-topology-CloudEosRR2]" time="0.309" /><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[kg-topology-CloudEosRR2]" time="0.382" /><testcase classname="tests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[kg-topology-CloudEosRR2]" time="0.305" /><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_servers_are_reachable_on_[kg-topology-CloudEosRR2]" time="4.896"><failure message="assert [False] == [True]&#10;  At index 0 diff: False != True&#10;  Full diff:&#10;  - [True]&#10;  + [False]">self = &lt;vane.bin.tests.dns.test_dns.DNSTests object at 0x7f3d5274bcd0&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.23.123.34:443//command-api)), 'name': 'kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_dns_servers_are_reachable_on_(self, dut, tests_definitions):
        """ Verifies DNS servers are reachable via ping
    
            Args:
              dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
        dns_servers = tops.test_parameters["dns_servers"]
        dns_vrf = tops.test_parameters["dns_vrf"]
    
        for dns_server in dns_servers:
            if dns_vrf:
                show_cmd = f"ping vrf {dns_vrf} ip {dns_server}"
            else:
                show_cmd = f"ping {dns_server}"
    
            tops.return_show_cmd(show_cmd)
            tops.actual_output = 'bytes from' in tops.show_cmd_txt
            tops.test_result = tops.actual_output is tops.expected_output
    
            tops.output_msg += (f"\nOn router |{tops.dut_name}|, verifying NTP "
                                f"server reachability for |{dns_server}| is "
                                f"|{tops.test_result}|.\n")
    
            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '
                             f'GIVEN server |{dns_server}|.\n'
                             'WHEN exception is |bytes from| '
                             'string.\n'
                             f'THEN test case result is |{tops.test_result}|.\n'
                             f'OUTPUT of |{show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [False] == [True]
E         At index 0 diff: False != True
E         Full diff:
E         - [True]
E         + [False]

tests/dns/test_dns.py:131: AssertionError</failure></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[kg-topology-CloudEosRR2]" time="0.371" /><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[kg-topology-CloudEosRR2]" time="0.283" /><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[kg-topology-CloudEosRR2]" time="0.323" /><testcase classname="tests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[kg-topology-CloudEosRR1]" time="0.690" /><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_resolves_on_[kg-topology-CloudEosRR2]" time="1.193" /><testcase classname="tests.system.test_system.SystemTests" name="test_if_eos_version_is_correct_on_[kg-topology-CloudEosRR1]" time="0.274"><failure message="AssertionError: assert '4.24.0FX-cloud' == '4.23.1F-clou...eering build)'&#10;  - 4.23.1F-cloud-16179785.jakartarel (engineering build)&#10;  + 4.24.0FX-cloud">self = &lt;vane.bin.tests.system.test_system.SystemTests object at 0x7ff1980c2af0&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.129.242.29:443//command-api)), 'name': 'kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_eos_version_is_correct_on_(self, dut, tests_definitions):
        """ Verifies EOS version running on the device
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
                tests_definitions (dict): Test parameters
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        tops.actual_output = dut["output"][tops.show_cmd]["json"]["version"]
        tops.test_result = tops.actual_output == tops.expected_output
    
        tops.output_msg = (f"On router |{tops.dut_name}| EOS version is "
                           f"|{tops.actual_output}%|, version should be "
                           f"|{tops.expected_output}%|")
        tops.comment = ('TEST EOS version running on the device on '
                        f'|{tops.dut_name}|.\n'
                        f'GIVEN version is |{tops.expected_output}|.\n'
                        f'WHEN version is |{tops.actual_output}|.\n'
                        f'THEN test case result is |{tops.test_result}|.\n'
                        f'OUTPUT of |{tops.show_cmd}| is:\n\n{tops.show_cmd_txt}')
    
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.post_testcase()
    
&gt;       assert tops.actual_output == tops.expected_output
E       AssertionError: assert '4.24.0FX-cloud' == '4.23.1F-clou...eering build)'
E         - 4.23.1F-cloud-16179785.jakartarel (engineering build)
E         + 4.24.0FX-cloud

tests/system/test_system.py:116: AssertionError</failure></testcase><testcase classname="tests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[kg-topology-CloudEosRR2]" time="0.957" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.302" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.326" /><testcase classname="tests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[kg-topology-CloudEosRR2]" time="0.336" /><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_installed_on_[kg-topology-CloudEosRR2]" time="0.326" /><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[kg-topology-CloudEosRR2]" time="0.315" /><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_erroring_on_[kg-topology-CloudEosRR2]" time="0.312" /><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[kg-topology-CloudEosRR2]" time="0.333" /><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_interface_utilization_on_[kg-topology-CloudEosRR2]" time="0.347" /><testcase classname="tests.interface.test_interface.InterfacePhyTests" name="test_if_intf_phy_status_connected_on_[kg-topology-CloudEosRR2]" time="0.333" /><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_out_counters_are_discarding_on_[kg-topology-CloudEosRR2]" time="0.334" /><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_if_interface_errors_on_[kg-topology-CloudEosRR2]" time="0.312" /><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_in_counters_are_discarding_on_[kg-topology-CloudEosRR2]" time="0.334" /><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_rx_is_enabled_on_[kg-topology-CloudEosRR2]" time="0.327" /><testcase classname="tests.interface.test_interface.InterfaceMtuTests" name="test_if_intf_mtu_is_correct_on_[kg-topology-CloudEosRR2]" time="0.340"><failure message="assert [1500] == [10178]&#10;  At index 0 diff: 1500 != 10178&#10;  Full diff:&#10;  - [10178]&#10;  + [1500]">self = &lt;vane.bin.tests.interface.test_interface.InterfaceMtuTests object at 0x7f8957e6d550&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.23.123.34:443//command-api)), 'name': 'kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_intf_mtu_is_correct_on_(self, dut, tests_definitions):
        """  Verify the interfaces of interest have no inDiscards
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f"\nOn router |{tops.dut_name}|:")
    
        for interface in tops.interface_list:
            interface_name = interface['interface_name'].replace(" ", "")
            int_ptr = dut["output"][tops.show_cmd]['json']['interfaces']
            tops.actual_output = int_ptr[interface_name]['mtu']
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.output_msg += (f"On interface |{interface_name}|: interface "
                                f"MTU is |{tops.actual_output}|, correct MTU is "
                                f"|{tops.expected_output}|.\n\n")
            tops.comment += (f'TEST if interface |{interface_name}| MTU is correct '
                             f'on |{tops.dut_name}|.\n'
                             f'GIVEN MTU of |{tops.expected_output}|.\n'
                             f'WHEN interface MTU is |{tops.actual_output}|.\n'
                             f'THEN test case result is |{tops.test_result}|.\n\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f'OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [1500] == [10178]
E         At index 0 diff: 1500 != 10178
E         Full diff:
E         - [10178]
E         + [1500]

tests/interface/test_interface.py:605: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_tx_is_enabled_on_[kg-topology-CloudEosRR2]" time="0.331" /><testcase classname="tests.dns.test_dns.DNSTests" name="test_dns_configuration_on_[kg-topology-CloudEosRR2]" time="0.766" /><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_max_frame_size_is_correct_on_[kg-topology-CloudEosRR2]" time="0.345"><failure message="assert [9236] == [10200]&#10;  At index 0 diff: 9236 != 10200&#10;  Full diff:&#10;  - [10200]&#10;  + [9236]">self = &lt;vane.bin.tests.lldp.test_lldp.LldpLocalInfoTests object at 0x7ff1980f7400&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.23.123.34:443//command-api)), 'name': 'kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_lldp_max_frame_size_is_correct_on_(self, dut, tests_definitions):
        """  Verify show lldp local-info maxFrameSize is correct
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f"\nOn router |{tops.dut_name}|:")
    
        for interface in tops.interface_list:
            interface_name = interface['interface_name'].replace(" ", "")
            int_ptr = dut["output"][tops.show_cmd]["json"]['localInterfaceInfo']
            tops.actual_output = int_ptr[interface_name]['maxFrameSize']
    
            tops.output_msg += (f"On interface |{interface_name}|: LLDP local-info "
                                f"maxFrameSize is |{tops.actual_output}|, correct "
                                f"maxFrameSize is |{tops.expected_output}|.\n\n")
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.comment += (f'TEST if |{tops.dut_name}| LLDP maxFrameSize is correct '
                             f'on interface |{interface_name}|.\n'
                             f'GIVEN LLDP maxFrameSize is |{tops.expected_output}|.\n'
                             f'WHEN LLDP maxFrameSize is |{tops.actual_output}|.\n'
                             f'THEN test case result is |{tops.test_result}|.\n\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f'OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [9236] == [10200]
E         At index 0 diff: 9236 != 10200
E         Full diff:
E         - [10200]
E         + [9236]

tests/lldp/test_lldp.py:203: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_system_name_is_correct_on_[kg-topology-CloudEosRR2]" time="0.389" /><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_interface_id_is_correct_on_[kg-topology-CloudEosRR2]" time="0.316" /><testcase classname="tests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[kg-topology-CloudEosRR2]" time="0.347" /><testcase classname="tests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[kg-topology-CloudEosRR2]" time="0.362" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.350" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_is_synchronized_on_[kg-topology-CloudEosRR2]" time="1.365" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_associated_with_peers_on_[kg-topology-CloudEosRR2]" time="1.423" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEosRR2]" time="1.407" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_process_is_running_on_[kg-topology-CloudEosRR2]" time="0.494" /><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEosRR2]" time="0.413" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_ntp_configuration_on_[kg-topology-CloudEosRR2]" time="0.896" /><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_servers_are_reachable_on_[kg-topology-CloudEosRR2]" time="4.971"><failure message="assert [False] == [True]&#10;  At index 0 diff: False != True&#10;  Full diff:&#10;  - [True]&#10;  + [False]">self = &lt;vane.bin.tests.ntp.test_ntp.NTPTests object at 0x7ff1982d8850&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.23.123.34:443//command-api)), 'name': 'kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_ntp_servers_are_reachable_on_(self, dut, tests_definitions):
        """ Verifies DNS servers are reachable via ping
    
            Args:
              dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
        ntp_servers = tops.test_parameters["ntp_servers"]
        ntp_vrf = tops.test_parameters["ntp_vrf"]
    
        for ntp_server in ntp_servers:
            if ntp_vrf:
                show_cmd = f"ping vrf {ntp_vrf} ip {ntp_server}"
            else:
                show_cmd = f"ping {ntp_server}"
    
            tops.return_show_cmd(show_cmd)
            tops.actual_output = 'bytes from' in tops.show_cmd_txt
            tops.test_result = tops.actual_output is tops.expected_output
    
            tops.output_msg += (f"\nOn router |{tops.dut_name}|, verifying NTP "
                                f"server reachability for |{ntp_server}| is "
                                f"|{tops.test_result}|.\n")
    
            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '
                             f'GIVEN server |{ntp_server}|.\n'
                             'WHEN exception is |bytes from| '
                             'string.\n'
                             f'THEN test case result is |{tops.test_result}|.\n'
                             f'OUTPUT of |{show_cmd}| is :\n\n{tops.show_cmd_txt}.\n')
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [False] == [True]
E         At index 0 diff: False != True
E         Full diff:
E         - [True]
E         + [False]

tests/ntp/test_ntp.py:250: AssertionError</failure></testcase><testcase classname="tests.system.test_system.SystemTests" name="test_if_eos_version_is_correct_on_[kg-topology-CloudEosRR2]" time="0.286"><failure message="AssertionError: assert '4.24.0FX-cloud' == '4.23.1F-clou...eering build)'&#10;  - 4.23.1F-cloud-16179785.jakartarel (engineering build)&#10;  + 4.24.0FX-cloud">self = &lt;vane.bin.tests.system.test_system.SystemTests object at 0x7f3d527ddaf0&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://3.23.123.34:443//command-api)), 'name': 'kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n'}, ...}}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_eos_version_is_correct_on_(self, dut, tests_definitions):
        """ Verifies EOS version running on the device
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
                tests_definitions (dict): Test parameters
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        tops.actual_output = dut["output"][tops.show_cmd]["json"]["version"]
        tops.test_result = tops.actual_output == tops.expected_output
    
        tops.output_msg = (f"On router |{tops.dut_name}| EOS version is "
                           f"|{tops.actual_output}%|, version should be "
                           f"|{tops.expected_output}%|")
        tops.comment = ('TEST EOS version running on the device on '
                        f'|{tops.dut_name}|.\n'
                        f'GIVEN version is |{tops.expected_output}|.\n'
                        f'WHEN version is |{tops.actual_output}|.\n'
                        f'THEN test case result is |{tops.test_result}|.\n'
                        f'OUTPUT of |{tops.show_cmd}| is:\n\n{tops.show_cmd_txt}')
    
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.post_testcase()
    
&gt;       assert tops.actual_output == tops.expected_output
E       AssertionError: assert '4.24.0FX-cloud' == '4.23.1F-clou...eering build)'
E         - 4.23.1F-cloud-16179785.jakartarel (engineering build)
E         + 4.24.0FX-cloud

tests/system/test_system.py:116: AssertionError</failure></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_receiving_messages_on_[kg-topology-CloudEosRR2]" time="0.263" /><testcase classname="tests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[kg-topology-CloudEosRR2]" time="0.648" /><testcase classname="tests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[kg-topology-CloudEosRR2]" time="0.303" /><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[kg-topology-CloudEosRR2]" time="0.273" /><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[kg-topology-CloudEosRR2]" time="0.280" /><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_sending_messages_on_[kg-topology-CloudEosRR2]" time="0.264" /></testsuite></testsuites>