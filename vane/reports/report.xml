<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="8" hostname="100872f5073d" name="pytest" skipped="4" tests="228" time="65.585" timestamp="2020-10-07T14:42:57.833517"><testcase classname="tests.test_pytest.PyTestTests" name="test_assert_true[kg-topology-CloudEosRR1]" time="0.003"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_authentication_counters_are_incrementing_on_[kg-topology-CloudEosRR1]" time="0.000"><skipped message="No AAA setup on DUTs" type="pytest.skip">/project/vane/bin/tests/aaa/test_aaa.py:51: No AAA setup on DUTs</skipped></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_aaa_session_logging_is_working_on_[kg-topology-CloudEosRR1]" time="0.208"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_commands_authorization_methods_set_on_[kg-topology-CloudEosRR1]" time="0.213"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_authorization_methods_set_on_[kg-topology-CloudEosRR1]" time="0.211"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_default_login_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.221"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_login_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.213"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.202"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_enable_authentication_methods_set_on_[kg-topology-CloudEosRR1]" time="0.220"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_system_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.202"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.212"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_priviledge_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.202"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_accounting_methods_set_on_[kg-topology-CloudEosRR1]" time="0.222"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[kg-topology-CloudEosRR1]" time="0.252"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[kg-topology-CloudEosRR1]" time="0.234"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[kg-topology-CloudEosRR1]" time="0.212"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[kg-topology-CloudEosRR1]" time="0.202"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[kg-topology-CloudEosRR1]" time="0.210"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[kg-topology-CloudEosRR1]" time="0.254"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[kg-topology-CloudEosRR1]" time="0.281"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[kg-topology-CloudEosRR1]" time="0.251"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[kg-topology-CloudEosRR1]" time="0.202"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[kg-topology-CloudEosRR1]" time="0.197"></testcase><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_resolves_on_[kg-topology-CloudEosRR1]" time="1.799"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.286"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.264"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEosRR1]" time="0.219"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.215"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEosRR1]" time="0.204"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_installed_on_[kg-topology-CloudEosRR1]" time="0.228"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_erroring_on_[kg-topology-CloudEosRR1]" time="0.216"></testcase><testcase classname="tests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[kg-topology-CloudEosRR1]" time="1.624"></testcase><testcase classname="tests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[kg-topology-CloudEosRR1]" time="0.231"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[kg-topology-CloudEosRR1]" time="0.231"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[kg-topology-CloudEosRR1]" time="0.231"></testcase><testcase classname="tests.interface.test_interface.InterfacePhyTests" name="test_if_intf_phy_status_connected_on_[kg-topology-CloudEosRR1]" time="0.219"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_if_interface_errors_on_[kg-topology-CloudEosRR1]" time="0.240"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_interface_utilization_on_[kg-topology-CloudEosRR1]" time="0.221"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_out_counters_are_discarding_on_[kg-topology-CloudEosRR1]" time="0.228"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_in_counters_are_discarding_on_[kg-topology-CloudEosRR1]" time="0.215"></testcase><testcase classname="tests.interface.test_interface.InterfaceMtuTests" name="test_if_intf_mtu_is_correct_on_[kg-topology-CloudEosRR1]" time="0.225"><failure message="assert [1500] == [10178]
  At index 0 diff: 1500 != 10178
  Full diff:
  - [10178]
  + [1500]">self = &lt;bin.tests.interface.test_interface.InterfaceMtuTests object at 0x7f2c7c704f70&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.22.137.44:443//command-api)), &apos;name&apos;: &apos;kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_intf_mtu_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify the interfaces of interest have no inDiscards
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&apos;json&apos;][&apos;interfaces&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;mtu&apos;]
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: interface &quot;
                                f&quot;MTU is |{tops.actual_output}|, correct MTU is &quot;
                                f&quot;|{tops.expected_output}|.\n\n&quot;)
            tops.comment += (f&apos;TEST if interface |{interface_name}| MTU is correct &apos;
                             f&apos;on |{tops.dut_name}|.\n&apos;
                             f&apos;GIVEN MTU of |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN interface MTU is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [1500] == [10178]
E         At index 0 diff: 1500 != 10178
E         Full diff:
E         - [10178]
E         + [1500]

tests/interface/test_interface.py:605: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_rx_is_enabled_on_[kg-topology-CloudEosRR1]" time="0.225"></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_tx_is_enabled_on_[kg-topology-CloudEosRR1]" time="0.225"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_system_name_is_correct_on_[kg-topology-CloudEosRR1]" time="0.213"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_max_frame_size_is_correct_on_[kg-topology-CloudEosRR1]" time="0.212"><failure message="assert [9236] == [10200]
  At index 0 diff: 9236 != 10200
  Full diff:
  - [10200]
  + [9236]">self = &lt;bin.tests.lldp.test_lldp.LldpLocalInfoTests object at 0x7f2c7c5f0a30&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.22.137.44:443//command-api)), &apos;name&apos;: &apos;kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_lldp_max_frame_size_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify show lldp local-info maxFrameSize is correct
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&quot;json&quot;][&apos;localInterfaceInfo&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;maxFrameSize&apos;]
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: LLDP local-info &quot;
                                f&quot;maxFrameSize is |{tops.actual_output}|, correct &quot;
                                f&quot;maxFrameSize is |{tops.expected_output}|.\n\n&quot;)
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.comment += (f&apos;TEST if |{tops.dut_name}| LLDP maxFrameSize is correct &apos;
                             f&apos;on interface |{interface_name}|.\n&apos;
                             f&apos;GIVEN LLDP maxFrameSize is |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN LLDP maxFrameSize is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [9236] == [10200]
E         At index 0 diff: 9236 != 10200
E         Full diff:
E         - [10200]
E         + [9236]

tests/lldp/test_lldp.py:203: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_interface_id_is_correct_on_[kg-topology-CloudEosRR1]" time="0.220"></testcase><testcase classname="tests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[kg-topology-CloudEosRR1]" time="0.236"></testcase><testcase classname="tests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[kg-topology-CloudEosRR1]" time="0.212"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_is_synchronized_on_[kg-topology-CloudEosRR1]" time="0.209"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_associated_with_peers_on_[kg-topology-CloudEosRR1]" time="0.204"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_process_is_running_on_[kg-topology-CloudEosRR1]" time="0.281"></testcase><testcase classname="tests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[kg-topology-CloudEosRR1]" time="0.952"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_sending_messages_on_[kg-topology-CloudEosRR1]" time="0.219"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_receiving_messages_on_[kg-topology-CloudEosRR1]" time="0.220"></testcase><testcase classname="tests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[kg-topology-CloudEosRR1]" time="0.236"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[kg-topology-CloudEosRR1]" time="0.220"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[kg-topology-CloudEosRR1]" time="0.203"></testcase><testcase classname="tests.test_pytest.PyTestTests" name="test_assert_true[kg-topology-CloudEosRR2]" time="0.002"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_authentication_counters_are_incrementing_on_[kg-topology-CloudEosRR2]" time="0.000"><skipped message="No AAA setup on DUTs" type="pytest.skip">/project/vane/bin/tests/aaa/test_aaa.py:51: No AAA setup on DUTs</skipped></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_aaa_session_logging_is_working_on_[kg-topology-CloudEosRR2]" time="0.213"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_commands_authorization_methods_set_on_[kg-topology-CloudEosRR2]" time="0.213"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_authorization_methods_set_on_[kg-topology-CloudEosRR2]" time="0.201"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_default_login_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.201"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_login_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.214"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.200"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_enable_authentication_methods_set_on_[kg-topology-CloudEosRR2]" time="0.206"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_system_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.229"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.833"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_priviledge_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.215"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_accounting_methods_set_on_[kg-topology-CloudEosRR2]" time="0.199"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[kg-topology-CloudEosRR2]" time="0.231"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[kg-topology-CloudEosRR2]" time="0.209"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[kg-topology-CloudEosRR2]" time="0.220"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[kg-topology-CloudEosRR2]" time="0.216"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[kg-topology-CloudEosRR2]" time="0.210"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[kg-topology-CloudEosRR2]" time="0.276"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[kg-topology-CloudEosRR2]" time="0.266"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[kg-topology-CloudEosRR2]" time="0.268"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[kg-topology-CloudEosRR2]" time="0.200"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[kg-topology-CloudEosRR2]" time="0.219"></testcase><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_resolves_on_[kg-topology-CloudEosRR2]" time="2.175"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.239"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.257"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEosRR2]" time="0.214"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.206"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEosRR2]" time="0.223"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_installed_on_[kg-topology-CloudEosRR2]" time="0.231"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_erroring_on_[kg-topology-CloudEosRR2]" time="0.231"></testcase><testcase classname="tests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[kg-topology-CloudEosRR2]" time="1.179"></testcase><testcase classname="tests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[kg-topology-CloudEosRR2]" time="0.235"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[kg-topology-CloudEosRR2]" time="0.235"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[kg-topology-CloudEosRR2]" time="0.209"></testcase><testcase classname="tests.interface.test_interface.InterfacePhyTests" name="test_if_intf_phy_status_connected_on_[kg-topology-CloudEosRR2]" time="0.214"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_if_interface_errors_on_[kg-topology-CloudEosRR2]" time="0.218"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_interface_utilization_on_[kg-topology-CloudEosRR2]" time="0.208"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_out_counters_are_discarding_on_[kg-topology-CloudEosRR2]" time="0.212"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_in_counters_are_discarding_on_[kg-topology-CloudEosRR2]" time="0.226"></testcase><testcase classname="tests.interface.test_interface.InterfaceMtuTests" name="test_if_intf_mtu_is_correct_on_[kg-topology-CloudEosRR2]" time="0.221"><failure message="assert [1500] == [10178]
  At index 0 diff: 1500 != 10178
  Full diff:
  - [10178]
  + [1500]">self = &lt;bin.tests.interface.test_interface.InterfaceMtuTests object at 0x7f2c7c66fdc0&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.131.6.163:443//command-api)), &apos;name&apos;: &apos;kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_intf_mtu_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify the interfaces of interest have no inDiscards
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&apos;json&apos;][&apos;interfaces&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;mtu&apos;]
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: interface &quot;
                                f&quot;MTU is |{tops.actual_output}|, correct MTU is &quot;
                                f&quot;|{tops.expected_output}|.\n\n&quot;)
            tops.comment += (f&apos;TEST if interface |{interface_name}| MTU is correct &apos;
                             f&apos;on |{tops.dut_name}|.\n&apos;
                             f&apos;GIVEN MTU of |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN interface MTU is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [1500] == [10178]
E         At index 0 diff: 1500 != 10178
E         Full diff:
E         - [10178]
E         + [1500]

tests/interface/test_interface.py:605: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_rx_is_enabled_on_[kg-topology-CloudEosRR2]" time="0.232"></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_tx_is_enabled_on_[kg-topology-CloudEosRR2]" time="0.229"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_system_name_is_correct_on_[kg-topology-CloudEosRR2]" time="0.208"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_max_frame_size_is_correct_on_[kg-topology-CloudEosRR2]" time="0.204"><failure message="assert [9236] == [10200]
  At index 0 diff: 9236 != 10200
  Full diff:
  - [10200]
  + [9236]">self = &lt;bin.tests.lldp.test_lldp.LldpLocalInfoTests object at 0x7f2c7c57c070&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.131.6.163:443//command-api)), &apos;name&apos;: &apos;kg-topology-C...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_lldp_max_frame_size_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify show lldp local-info maxFrameSize is correct
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&quot;json&quot;][&apos;localInterfaceInfo&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;maxFrameSize&apos;]
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: LLDP local-info &quot;
                                f&quot;maxFrameSize is |{tops.actual_output}|, correct &quot;
                                f&quot;maxFrameSize is |{tops.expected_output}|.\n\n&quot;)
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.comment += (f&apos;TEST if |{tops.dut_name}| LLDP maxFrameSize is correct &apos;
                             f&apos;on interface |{interface_name}|.\n&apos;
                             f&apos;GIVEN LLDP maxFrameSize is |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN LLDP maxFrameSize is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [9236] == [10200]
E         At index 0 diff: 9236 != 10200
E         Full diff:
E         - [10200]
E         + [9236]

tests/lldp/test_lldp.py:203: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_interface_id_is_correct_on_[kg-topology-CloudEosRR2]" time="0.218"></testcase><testcase classname="tests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[kg-topology-CloudEosRR2]" time="0.240"></testcase><testcase classname="tests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[kg-topology-CloudEosRR2]" time="0.205"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_is_synchronized_on_[kg-topology-CloudEosRR2]" time="0.203"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_associated_with_peers_on_[kg-topology-CloudEosRR2]" time="0.220"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_process_is_running_on_[kg-topology-CloudEosRR2]" time="0.301"></testcase><testcase classname="tests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[kg-topology-CloudEosRR2]" time="0.779"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_sending_messages_on_[kg-topology-CloudEosRR2]" time="0.249"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_receiving_messages_on_[kg-topology-CloudEosRR2]" time="0.214"></testcase><testcase classname="tests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[kg-topology-CloudEosRR2]" time="0.222"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[kg-topology-CloudEosRR2]" time="0.245"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[kg-topology-CloudEosRR2]" time="0.227"></testcase><testcase classname="tests.test_pytest.PyTestTests" name="test_assert_true[kg-topology-CloudEOSEdge1]" time="0.002"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_authentication_counters_are_incrementing_on_[kg-topology-CloudEOSEdge1]" time="0.001"><skipped message="No AAA setup on DUTs" type="pytest.skip">/project/vane/bin/tests/aaa/test_aaa.py:51: No AAA setup on DUTs</skipped></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_aaa_session_logging_is_working_on_[kg-topology-CloudEOSEdge1]" time="0.227"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_commands_authorization_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.212"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_authorization_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.202"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_default_login_authentication_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.200"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_login_authentication_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.216"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_authentication_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.217"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_enable_authentication_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.204"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_system_accounting_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.226"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_accounting_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.199"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_priviledge_accounting_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.211"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_accounting_methods_set_on_[kg-topology-CloudEOSEdge1]" time="0.205"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[kg-topology-CloudEOSEdge1]" time="0.219"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[kg-topology-CloudEOSEdge1]" time="0.214"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[kg-topology-CloudEOSEdge1]" time="0.220"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[kg-topology-CloudEOSEdge1]" time="0.225"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[kg-topology-CloudEOSEdge1]" time="0.209"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[kg-topology-CloudEOSEdge1]" time="0.273"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[kg-topology-CloudEOSEdge1]" time="0.278"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[kg-topology-CloudEOSEdge1]" time="0.285"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[kg-topology-CloudEOSEdge1]" time="0.206"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[kg-topology-CloudEOSEdge1]" time="0.206"></testcase><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_resolves_on_[kg-topology-CloudEOSEdge1]" time="1.782"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEOSEdge1]" time="0.237"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEOSEdge1]" time="0.284"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEOSEdge1]" time="0.235"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEOSEdge1]" time="0.236"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEOSEdge1]" time="0.244"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_installed_on_[kg-topology-CloudEOSEdge1]" time="0.223"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_erroring_on_[kg-topology-CloudEOSEdge1]" time="0.226"></testcase><testcase classname="tests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[kg-topology-CloudEOSEdge1]" time="1.340"></testcase><testcase classname="tests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[kg-topology-CloudEOSEdge1]" time="0.233"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[kg-topology-CloudEOSEdge1]" time="0.215"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[kg-topology-CloudEOSEdge1]" time="0.215"></testcase><testcase classname="tests.interface.test_interface.InterfacePhyTests" name="test_if_intf_phy_status_connected_on_[kg-topology-CloudEOSEdge1]" time="0.220"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_if_interface_errors_on_[kg-topology-CloudEOSEdge1]" time="0.230"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_interface_utilization_on_[kg-topology-CloudEOSEdge1]" time="0.227"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_out_counters_are_discarding_on_[kg-topology-CloudEOSEdge1]" time="0.209"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_in_counters_are_discarding_on_[kg-topology-CloudEOSEdge1]" time="0.242"></testcase><testcase classname="tests.interface.test_interface.InterfaceMtuTests" name="test_if_intf_mtu_is_correct_on_[kg-topology-CloudEOSEdge1]" time="0.236"><failure message="assert [1500, 9000] == [10178, 10178]
  At index 0 diff: 1500 != 10178
  Full diff:
  - [10178, 10178]
  + [1500, 9000]">self = &lt;bin.tests.interface.test_interface.InterfaceMtuTests object at 0x7f2c7c629ac0&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.132.90.164:443//command-api)), &apos;name&apos;: &apos;kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_intf_mtu_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify the interfaces of interest have no inDiscards
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&apos;json&apos;][&apos;interfaces&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;mtu&apos;]
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: interface &quot;
                                f&quot;MTU is |{tops.actual_output}|, correct MTU is &quot;
                                f&quot;|{tops.expected_output}|.\n\n&quot;)
            tops.comment += (f&apos;TEST if interface |{interface_name}| MTU is correct &apos;
                             f&apos;on |{tops.dut_name}|.\n&apos;
                             f&apos;GIVEN MTU of |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN interface MTU is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [1500, 9000] == [10178, 10178]
E         At index 0 diff: 1500 != 10178
E         Full diff:
E         - [10178, 10178]
E         + [1500, 9000]

tests/interface/test_interface.py:605: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_rx_is_enabled_on_[kg-topology-CloudEOSEdge1]" time="0.263"></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_tx_is_enabled_on_[kg-topology-CloudEOSEdge1]" time="0.215"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_system_name_is_correct_on_[kg-topology-CloudEOSEdge1]" time="0.217"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_max_frame_size_is_correct_on_[kg-topology-CloudEOSEdge1]" time="0.218"><failure message="assert [9236, 9236] == [10200, 10200]
  At index 0 diff: 9236 != 10200
  Full diff:
  - [10200, 10200]
  + [9236, 9236]">self = &lt;bin.tests.lldp.test_lldp.LldpLocalInfoTests object at 0x7f2c7c619be0&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.132.90.164:443//command-api)), &apos;name&apos;: &apos;kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_lldp_max_frame_size_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify show lldp local-info maxFrameSize is correct
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&quot;json&quot;][&apos;localInterfaceInfo&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;maxFrameSize&apos;]
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: LLDP local-info &quot;
                                f&quot;maxFrameSize is |{tops.actual_output}|, correct &quot;
                                f&quot;maxFrameSize is |{tops.expected_output}|.\n\n&quot;)
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.comment += (f&apos;TEST if |{tops.dut_name}| LLDP maxFrameSize is correct &apos;
                             f&apos;on interface |{interface_name}|.\n&apos;
                             f&apos;GIVEN LLDP maxFrameSize is |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN LLDP maxFrameSize is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [9236, 9236] == [10200, 10200]
E         At index 0 diff: 9236 != 10200
E         Full diff:
E         - [10200, 10200]
E         + [9236, 9236]

tests/lldp/test_lldp.py:203: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_interface_id_is_correct_on_[kg-topology-CloudEOSEdge1]" time="0.219"></testcase><testcase classname="tests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[kg-topology-CloudEOSEdge1]" time="0.242"></testcase><testcase classname="tests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[kg-topology-CloudEOSEdge1]" time="0.226"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_is_synchronized_on_[kg-topology-CloudEOSEdge1]" time="0.214"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_associated_with_peers_on_[kg-topology-CloudEOSEdge1]" time="0.220"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_process_is_running_on_[kg-topology-CloudEOSEdge1]" time="0.272"></testcase><testcase classname="tests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[kg-topology-CloudEOSEdge1]" time="0.919"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_sending_messages_on_[kg-topology-CloudEOSEdge1]" time="0.221"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_receiving_messages_on_[kg-topology-CloudEOSEdge1]" time="0.211"></testcase><testcase classname="tests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[kg-topology-CloudEOSEdge1]" time="0.207"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[kg-topology-CloudEOSEdge1]" time="0.225"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[kg-topology-CloudEOSEdge1]" time="0.212"></testcase><testcase classname="tests.test_pytest.PyTestTests" name="test_assert_true[kg-topology-CloudEOSEdge2]" time="0.002"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_authentication_counters_are_incrementing_on_[kg-topology-CloudEOSEdge2]" time="0.000"><skipped message="No AAA setup on DUTs" type="pytest.skip">/project/vane/bin/tests/aaa/test_aaa.py:51: No AAA setup on DUTs</skipped></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_aaa_session_logging_is_working_on_[kg-topology-CloudEOSEdge2]" time="0.221"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_commands_authorization_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.220"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_authorization_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.203"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_default_login_authentication_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.219"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_login_authentication_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.194"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_authentication_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.204"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_enable_authentication_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.213"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_system_accounting_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.214"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_exec_accounting_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.204"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_priviledge_accounting_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.211"></testcase><testcase classname="tests.aaa.test_aaa.AAATests" name="test_if_dot1x_accounting_methods_set_on_[kg-topology-CloudEOSEdge2]" time="0.202"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[kg-topology-CloudEOSEdge2]" time="0.218"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[kg-topology-CloudEOSEdge2]" time="0.221"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[kg-topology-CloudEOSEdge2]" time="0.222"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[kg-topology-CloudEOSEdge2]" time="0.220"></testcase><testcase classname="tests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[kg-topology-CloudEOSEdge2]" time="0.213"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[kg-topology-CloudEOSEdge2]" time="0.265"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[kg-topology-CloudEOSEdge2]" time="0.280"></testcase><testcase classname="tests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[kg-topology-CloudEOSEdge2]" time="0.270"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[kg-topology-CloudEOSEdge2]" time="0.217"></testcase><testcase classname="tests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[kg-topology-CloudEOSEdge2]" time="0.213"></testcase><testcase classname="tests.dns.test_dns.DNSTests" name="test_if_dns_resolves_on_[kg-topology-CloudEOSEdge2]" time="1.840"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_temp_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.285"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_sensors_temp_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.279"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_power_are_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.229"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_system_environment_cooling_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.210"></testcase><testcase classname="tests.environment.test_environment.EnvironmentTests" name="test_if_fan_status_is_in_spec_on_[kg-topology-CloudEOSEdge2]" time="0.213"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_installed_on_[kg-topology-CloudEOSEdge2]" time="0.222"></testcase><testcase classname="tests.extension.test_extension.ExtensionsTests" name="test_if_extensions_are_erroring_on_[kg-topology-CloudEOSEdge2]" time="0.211"></testcase><testcase classname="tests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[kg-topology-CloudEOSEdge2]" time="1.238"></testcase><testcase classname="tests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[kg-topology-CloudEOSEdge2]" time="0.222"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[kg-topology-CloudEOSEdge2]" time="0.253"></testcase><testcase classname="tests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[kg-topology-CloudEOSEdge2]" time="0.235"></testcase><testcase classname="tests.interface.test_interface.InterfacePhyTests" name="test_if_intf_phy_status_connected_on_[kg-topology-CloudEOSEdge2]" time="0.234"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_if_interface_errors_on_[kg-topology-CloudEOSEdge2]" time="0.239"></testcase><testcase classname="tests.interface.test_interface.InterfaceCountersTests" name="test_interface_utilization_on_[kg-topology-CloudEOSEdge2]" time="0.231"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_out_counters_are_discarding_on_[kg-topology-CloudEOSEdge2]" time="0.220"></testcase><testcase classname="tests.interface.test_interface.InterfaceDiscardTests" name="test_if_intf_in_counters_are_discarding_on_[kg-topology-CloudEOSEdge2]" time="0.236"></testcase><testcase classname="tests.interface.test_interface.InterfaceMtuTests" name="test_if_intf_mtu_is_correct_on_[kg-topology-CloudEOSEdge2]" time="0.239"><failure message="assert [1500, 9000] == [10178, 10178]
  At index 0 diff: 1500 != 10178
  Full diff:
  - [10178, 10178]
  + [1500, 9000]">self = &lt;bin.tests.interface.test_interface.InterfaceMtuTests object at 0x7f2c7c4dedf0&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.131.34.190:443//command-api)), &apos;name&apos;: &apos;kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_intf_mtu_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify the interfaces of interest have no inDiscards
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&apos;json&apos;][&apos;interfaces&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;mtu&apos;]
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: interface &quot;
                                f&quot;MTU is |{tops.actual_output}|, correct MTU is &quot;
                                f&quot;|{tops.expected_output}|.\n\n&quot;)
            tops.comment += (f&apos;TEST if interface |{interface_name}| MTU is correct &apos;
                             f&apos;on |{tops.dut_name}|.\n&apos;
                             f&apos;GIVEN MTU of |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN interface MTU is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [1500, 9000] == [10178, 10178]
E         At index 0 diff: 1500 != 10178
E         Full diff:
E         - [10178, 10178]
E         + [1500, 9000]

tests/interface/test_interface.py:605: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_rx_is_enabled_on_[kg-topology-CloudEOSEdge2]" time="0.234"></testcase><testcase classname="tests.lldp.test_lldp.LldpTests" name="test_if_lldp_tx_is_enabled_on_[kg-topology-CloudEOSEdge2]" time="0.240"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_system_name_is_correct_on_[kg-topology-CloudEOSEdge2]" time="0.222"></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_max_frame_size_is_correct_on_[kg-topology-CloudEOSEdge2]" time="0.224"><failure message="assert [9236, 9236] == [10200, 10200]
  At index 0 diff: 9236 != 10200
  Full diff:
  - [10200, 10200]
  + [9236, 9236]">self = &lt;bin.tests.lldp.test_lldp.LldpLocalInfoTests object at 0x7f2c7c42d700&gt;
dut = {&apos;connection&apos;: Node(connection=EapiConnection(transport=https://3.131.34.190:443//command-api)), &apos;name&apos;: &apos;kg-topology-...TEM:\n  name=system default-action=none\nAccounting method list for DOT1X:\n  name=dot1x default-action=none\n&apos;}, ...}}
tests_definitions = {&apos;test_suites&apos;: [{&apos;name&apos;: &apos;test_aaa.py&apos;, &apos;testcases&apos;: [{&apos;comment&apos;: None, &apos;description&apos;: &apos;Verify AAA counters are worki...ted_output&apos;: &apos;ok&apos;, &apos;name&apos;: &apos;test_if_fan_status_is_in_spec_on_&apos;, &apos;show_cmd&apos;: &apos;show system environment cooling&apos;}]}, ...]}

    def test_if_lldp_max_frame_size_is_correct_on_(self, dut, tests_definitions):
        &quot;&quot;&quot;  Verify show lldp local-info maxFrameSize is correct
    
            Args:
                dut (dict): Encapsulates dut details including name, connection
        &quot;&quot;&quot;
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
    
        print(f&quot;\nOn router |{tops.dut_name}|:&quot;)
    
        for interface in tops.interface_list:
            interface_name = interface[&apos;interface_name&apos;].replace(&quot; &quot;, &quot;&quot;)
            int_ptr = dut[&quot;output&quot;][tops.show_cmd][&quot;json&quot;][&apos;localInterfaceInfo&apos;]
            tops.actual_output = int_ptr[interface_name][&apos;maxFrameSize&apos;]
    
            tops.output_msg += (f&quot;On interface |{interface_name}|: LLDP local-info &quot;
                                f&quot;maxFrameSize is |{tops.actual_output}|, correct &quot;
                                f&quot;maxFrameSize is |{tops.expected_output}|.\n\n&quot;)
            tops.test_result = tops.actual_output == tops.expected_output
    
            tops.comment += (f&apos;TEST if |{tops.dut_name}| LLDP maxFrameSize is correct &apos;
                             f&apos;on interface |{interface_name}|.\n&apos;
                             f&apos;GIVEN LLDP maxFrameSize is |{tops.expected_output}|.\n&apos;
                             f&apos;WHEN LLDP maxFrameSize is |{tops.actual_output}|.\n&apos;
                             f&apos;THEN test case result is |{tops.test_result}|.\n\n&apos;)
    
            tops.actual_results.append(tops.actual_output)
            tops.expected_results.append(tops.expected_output)
    
        tops.comment += (f&apos;OUTPUT of |{tops.show_cmd}| is :\n\n{tops.show_cmd_txt}.\n&apos;)
        print(f&quot;{tops.output_msg}\n{tops.comment}&quot;)
    
        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results
        tops.post_testcase()
    
&gt;       assert tops.actual_results == tops.expected_results
E       assert [9236, 9236] == [10200, 10200]
E         At index 0 diff: 9236 != 10200
E         Full diff:
E         - [10200, 10200]
E         + [9236, 9236]

tests/lldp/test_lldp.py:203: AssertionError</failure></testcase><testcase classname="tests.lldp.test_lldp.LldpLocalInfoTests" name="test_if_lldp_interface_id_is_correct_on_[kg-topology-CloudEOSEdge2]" time="0.243"></testcase><testcase classname="tests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[kg-topology-CloudEOSEdge2]" time="0.267"></testcase><testcase classname="tests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[kg-topology-CloudEOSEdge2]" time="0.233"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_is_synchronized_on_[kg-topology-CloudEOSEdge2]" time="0.246"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_ntp_associated_with_peers_on_[kg-topology-CloudEOSEdge2]" time="0.257"></testcase><testcase classname="tests.ntp.test_ntp.NTPTests" name="test_if_process_is_running_on_[kg-topology-CloudEOSEdge2]" time="0.309"></testcase><testcase classname="tests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[kg-topology-CloudEOSEdge2]" time="1.032"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_sending_messages_on_[kg-topology-CloudEOSEdge2]" time="0.257"></testcase><testcase classname="tests.tacacs.test_tacacs.TacacsTests" name="test_if_tacacs_is_receiving_messages_on_[kg-topology-CloudEOSEdge2]" time="0.245"></testcase><testcase classname="tests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[kg-topology-CloudEOSEdge2]" time="0.258"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[kg-topology-CloudEOSEdge2]" time="0.241"></testcase><testcase classname="tests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[kg-topology-CloudEOSEdge2]" time="0.265"></testcase></testsuite></testsuites>