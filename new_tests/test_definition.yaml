- name: new_tests
  testcases:
  - name: test_ntp_functionality
    test_id: TN_1.1
    description: Test case for verification of NTP functionality.
    show_cmd: show ntp status
    expected_output: null
    test_criteria: Primary, secondary and tertiary NTP server information should be
      correct, primary NTP server status should be synchronized and all NTP servers
      should be reachable from the device.
    report_style: modern
    inputs:
      DC1-L2LEAF1A:
      - None
      DC1-L2LEAF2A:
      - None
      DC1-LEAF1A:
      - None
      DC1-LEAF1B:
      - None
      DC1-LEAF2A:
      - None
      DC1-LEAF2B:
      - None
      DC1-SPINE1:
      - None
      DC1-SPINE2:
      - None
    criteria: names
    filter:
    - DC1-L2LEAF1A
    - DC1-L2LEAF2A
    - DC1-LEAF1A
    - DC1-LEAF1B
    - DC1-LEAF2A
    - DC1-LEAF2B
    - DC1-SPINE1
    - DC1-SPINE2
  - name: test_routing_table_entry
    description: Verifies that the provided routes are present in the routing table
      of a specified VRF
    test_id: TN_1.4
    show_cmds:
    - show ip route vrf default 192.168.255.1
    - show ip route vrf default 192.168.255.2
    - show ip route vrf default 192.168.255.3
    - show ip route vrf default 192.168.255.4
    - show ip route vrf default 192.168.255.5
    - show ip route vrf default 192.168.255.6
    - show ip route vrf default 192.168.254.3
    - show ip route vrf default 192.168.254.5
    test_criteria: pass if the provided routes are present in the routing table, fail
      if one or many provided routes are missing from the routing table.
    expected_output: null
    inputs:
      DC1-LEAF1A:
      - result_overwrite:
          custom_field: 'Route: 192.168.255.1 - Peer: DC1-SPINE1'
        routes:
        - 192.168.255.1
      - result_overwrite:
          custom_field: 'Route: 192.168.255.2 - Peer: DC1-SPINE2'
        routes:
        - 192.168.255.2
      - result_overwrite:
          custom_field: 'Route: 192.168.255.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.255.3
      - result_overwrite:
          custom_field: 'Route: 192.168.255.4 - Peer: DC1-LEAF1B'
        routes:
        - 192.168.255.4
      - result_overwrite:
          custom_field: 'Route: 192.168.255.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.255.5
      - result_overwrite:
          custom_field: 'Route: 192.168.255.6 - Peer: DC1-LEAF2B'
        routes:
        - 192.168.255.6
      - result_overwrite:
          custom_field: 'Route: 192.168.254.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.254.3
      - result_overwrite:
          custom_field: 'Route: 192.168.254.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.254.5
      DC1-LEAF1B:
      - result_overwrite:
          custom_field: 'Route: 192.168.255.1 - Peer: DC1-SPINE1'
        routes:
        - 192.168.255.1
      - result_overwrite:
          custom_field: 'Route: 192.168.255.2 - Peer: DC1-SPINE2'
        routes:
        - 192.168.255.2
      - result_overwrite:
          custom_field: 'Route: 192.168.255.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.255.3
      - result_overwrite:
          custom_field: 'Route: 192.168.255.4 - Peer: DC1-LEAF1B'
        routes:
        - 192.168.255.4
      - result_overwrite:
          custom_field: 'Route: 192.168.255.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.255.5
      - result_overwrite:
          custom_field: 'Route: 192.168.255.6 - Peer: DC1-LEAF2B'
        routes:
        - 192.168.255.6
      - result_overwrite:
          custom_field: 'Route: 192.168.254.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.254.3
      - result_overwrite:
          custom_field: 'Route: 192.168.254.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.254.5
      DC1-LEAF2A:
      - result_overwrite:
          custom_field: 'Route: 192.168.255.1 - Peer: DC1-SPINE1'
        routes:
        - 192.168.255.1
      - result_overwrite:
          custom_field: 'Route: 192.168.255.2 - Peer: DC1-SPINE2'
        routes:
        - 192.168.255.2
      - result_overwrite:
          custom_field: 'Route: 192.168.255.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.255.3
      - result_overwrite:
          custom_field: 'Route: 192.168.255.4 - Peer: DC1-LEAF1B'
        routes:
        - 192.168.255.4
      - result_overwrite:
          custom_field: 'Route: 192.168.255.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.255.5
      - result_overwrite:
          custom_field: 'Route: 192.168.255.6 - Peer: DC1-LEAF2B'
        routes:
        - 192.168.255.6
      - result_overwrite:
          custom_field: 'Route: 192.168.254.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.254.3
      - result_overwrite:
          custom_field: 'Route: 192.168.254.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.254.5
      DC1-LEAF2B:
      - result_overwrite:
          custom_field: 'Route: 192.168.255.1 - Peer: DC1-SPINE1'
        routes:
        - 192.168.255.1
      - result_overwrite:
          custom_field: 'Route: 192.168.255.2 - Peer: DC1-SPINE2'
        routes:
        - 192.168.255.2
      - result_overwrite:
          custom_field: 'Route: 192.168.255.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.255.3
      - result_overwrite:
          custom_field: 'Route: 192.168.255.4 - Peer: DC1-LEAF1B'
        routes:
        - 192.168.255.4
      - result_overwrite:
          custom_field: 'Route: 192.168.255.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.255.5
      - result_overwrite:
          custom_field: 'Route: 192.168.255.6 - Peer: DC1-LEAF2B'
        routes:
        - 192.168.255.6
      - result_overwrite:
          custom_field: 'Route: 192.168.254.3 - Peer: DC1-LEAF1A'
        routes:
        - 192.168.254.3
      - result_overwrite:
          custom_field: 'Route: 192.168.254.5 - Peer: DC1-LEAF2A'
        routes:
        - 192.168.254.5
    criteria: names
    filter:
    - DC1-LEAF1A
    - DC1-LEAF1B
    - DC1-LEAF2A
    - DC1-LEAF2B
  - name: test_routing_protocol_model
    description: Verifies the configured routing protocol model is the one we expect.
    test_criteria: The test will pass if the configured routing protocol model is
      the one we expect. The test will fail if the configured routing protocol model
      is not the one we expect.
    test_id: TN_1.6
    show_cmd: show ip route summary
    expected_output: null
    inputs:
      DC1-LEAF1A:
      - model: multi-agent
        result_overwrite:
          custom_field: 'Routing protocol model: multi-agent'
      DC1-LEAF1B:
      - model: multi-agent
        result_overwrite:
          custom_field: 'Routing protocol model: multi-agent'
      DC1-LEAF2A:
      - model: multi-agent
        result_overwrite:
          custom_field: 'Routing protocol model: multi-agent'
      DC1-LEAF2B:
      - model: multi-agent
        result_overwrite:
          custom_field: 'Routing protocol model: multi-agent'
      DC1-SPINE1:
      - model: multi-agent
        result_overwrite:
          custom_field: 'Routing protocol model: multi-agent'
      DC1-SPINE2:
      - model: multi-agent
        result_overwrite:
          custom_field: 'Routing protocol model: multi-agent'
    criteria: names
    filter:
    - DC1-LEAF1A
    - DC1-LEAF1B
    - DC1-LEAF2A
    - DC1-LEAF2B
    - DC1-SPINE1
    - DC1-SPINE2
  - name: test_mlag_status
    description: Verifies the health status of the MLAG configuration
    test_criteria: Success if the test will pass if the MLAG state is 'active', negotiation
      status is 'connected', peer-link status and local interface status are 'up'.
      Fail if the test will fail if the MLAG state is not 'active', negotiation status
      is not 'connected', peer-link status or local interface status are not 'up'.
      Skip if the test will be skipped if MLAG is 'disabled'.
    test_id: TN_1.7
    show_cmd: show mlag
    expected_output: null
    inputs:
      DC1-LEAF1A:
      - None
      DC1-LEAF1B:
      - None
      DC1-LEAF2A:
      - None
      DC1-LEAF2B:
      - None
    criteria: names
    filter:
    - DC1-LEAF1A
    - DC1-LEAF1B
    - DC1-LEAF2A
    - DC1-LEAF2B
  - name: test_interfaces_status
    description: Verifies if the provided list of interfaces are all in the expected
      state.
    test_criteria: If line protocol status is provided, prioritize checking against
      both status and line protocol status. If line protocol status is not provided
      and interface status is 'up', expect both status and line protocol to be 'up'.
      If interface status is not 'up', check only the interface status without considering
      line protocol status
    test_id: TN_1.8
    show_cmd: show interfaces description
    inputs:
      DC1-L2LEAF1A:
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - DC1-LEAF1A_Ethernet5 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - DC1-LEAF1B_Ethernet5 = 'up'
      - interfaces:
        - name: Ethernet5
          status: up
        result_overwrite:
          custom_field: Interface Ethernet5 - server01_Eth0 = 'up'
      - interfaces:
        - name: Port-Channel1
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel1 - DC1_LEAF1_Po5 = 'up'
      DC1-L2LEAF2A:
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - DC1-LEAF2A_Ethernet5 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - DC1-LEAF2B_Ethernet5 = 'up'
      - interfaces:
        - name: Ethernet5
          status: up
        result_overwrite:
          custom_field: Interface Ethernet5 - server02_Eth0 = 'up'
      - interfaces:
        - name: Port-Channel1
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel1 - DC1_LEAF2_Po5 = 'up'
      DC1-LEAF1A:
      - interfaces:
        - name: Ethernet3
          status: up
        result_overwrite:
          custom_field: Interface Ethernet3 - MLAG_PEER_DC1-LEAF1B_Ethernet3 = 'up'
      - interfaces:
        - name: Ethernet4
          status: up
        result_overwrite:
          custom_field: Interface Ethernet4 - MLAG_PEER_DC1-LEAF1B_Ethernet4 = 'up'
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - P2P_LINK_TO_DC1-SPINE1_Ethernet1 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - P2P_LINK_TO_DC1-SPINE2_Ethernet1 = 'up'
      - interfaces:
        - name: Ethernet5
          status: up
        result_overwrite:
          custom_field: Interface Ethernet5 - DC1-L2LEAF1A_Ethernet1 = 'up'
      - interfaces:
        - name: Port-Channel3
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel3 - MLAG_PEER_DC1-LEAF1B_Po3 = 'up'
      - interfaces:
        - name: Port-Channel5
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel5 - DC1-L2LEAF1A_Po1 = 'up'
      - interfaces:
        - name: Vlan4093
          status: up
        result_overwrite:
          custom_field: Interface Vlan4093 - MLAG_PEER_L3_PEERING = 'up'
      - interfaces:
        - name: Vlan4094
          status: up
        result_overwrite:
          custom_field: Interface Vlan4094 - MLAG_PEER = 'up'
      - interfaces:
        - name: Vlan130
          status: up
        result_overwrite:
          custom_field: Interface Vlan130 - Tenant_A_APP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan131
          status: up
        result_overwrite:
          custom_field: Interface Vlan131 - Tenant_A_APP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3011
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3011 - MLAG_PEER_L3_iBGP: vrf Tenant_A_APP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan140
          status: up
        result_overwrite:
          custom_field: Interface Vlan140 - Tenant_A_DB_BZone_1 = 'up'
      - interfaces:
        - name: Vlan141
          status: up
        result_overwrite:
          custom_field: Interface Vlan141 - Tenant_A_DB_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3012
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3012 - MLAG_PEER_L3_iBGP: vrf Tenant_A_DB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan110
          status: up
        result_overwrite:
          custom_field: Interface Vlan110 - Tenant_A_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan111
          status: up
        result_overwrite:
          custom_field: Interface Vlan111 - Tenant_A_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan112
          status: up
        result_overwrite:
          custom_field: Interface Vlan112 - Tenant_A_OP_Zone_3 = 'up'
      - interfaces:
        - name: Vlan3009
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3009 - MLAG_PEER_L3_iBGP: vrf Tenant_A_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan150
          status: up
        result_overwrite:
          custom_field: Interface Vlan150 - Tenant_A_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3013
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3013 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan120
          status: up
        result_overwrite:
          custom_field: Interface Vlan120 - Tenant_A_WEB_Zone_1 = 'up'
      - interfaces:
        - name: Vlan121
          status: up
        result_overwrite:
          custom_field: Interface Vlan121 - Tenant_A_WEBZone_2 = 'up'
      - interfaces:
        - name: Vlan3010
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3010 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WEB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan210
          status: up
        result_overwrite:
          custom_field: Interface Vlan210 - Tenant_B_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan211
          status: up
        result_overwrite:
          custom_field: Interface Vlan211 - Tenant_B_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3019
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3019 - MLAG_PEER_L3_iBGP: vrf Tenant_B_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan250
          status: up
        result_overwrite:
          custom_field: Interface Vlan250 - Tenant_B_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3020
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3020 - MLAG_PEER_L3_iBGP: vrf Tenant_B_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan310
          status: up
        result_overwrite:
          custom_field: Interface Vlan310 - Tenant_C_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan311
          status: up
        result_overwrite:
          custom_field: Interface Vlan311 - Tenant_C_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3029
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3029 - MLAG_PEER_L3_iBGP: vrf Tenant_C_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan350
          status: up
        result_overwrite:
          custom_field: Interface Vlan350 - Tenant_C_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3030
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3030 - MLAG_PEER_L3_iBGP: vrf Tenant_C_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Loopback0
          status: up
        result_overwrite:
          custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
      - interfaces:
        - name: Loopback1
          status: up
        result_overwrite:
          custom_field: Interface Loopback1 - VTEP_VXLAN_Tunnel_Source = 'up'
      - interfaces:
        - name: Loopback100
          status: up
        result_overwrite:
          custom_field: Interface Loopback100 - Tenant_A_OP_Zone_VTEP_DIAGNOSTICS
            = 'up'
      - interfaces:
        - name: Vxlan1
          status: up
        result_overwrite:
          custom_field: Interface Vxlan1 = 'up'
      DC1-LEAF1B:
      - interfaces:
        - name: Ethernet3
          status: up
        result_overwrite:
          custom_field: Interface Ethernet3 - MLAG_PEER_DC1-LEAF1A_Ethernet3 = 'up'
      - interfaces:
        - name: Ethernet4
          status: up
        result_overwrite:
          custom_field: Interface Ethernet4 - MLAG_PEER_DC1-LEAF1A_Ethernet4 = 'up'
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - P2P_LINK_TO_DC1-SPINE1_Ethernet2 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - P2P_LINK_TO_DC1-SPINE2_Ethernet2 = 'up'
      - interfaces:
        - name: Ethernet5
          status: up
        result_overwrite:
          custom_field: Interface Ethernet5 - DC1-L2LEAF1A_Ethernet2 = 'up'
      - interfaces:
        - name: Port-Channel3
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel3 - MLAG_PEER_DC1-LEAF1A_Po3 = 'up'
      - interfaces:
        - name: Port-Channel5
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel5 - DC1-L2LEAF1A_Po1 = 'up'
      - interfaces:
        - name: Vlan4093
          status: up
        result_overwrite:
          custom_field: Interface Vlan4093 - MLAG_PEER_L3_PEERING = 'up'
      - interfaces:
        - name: Vlan4094
          status: up
        result_overwrite:
          custom_field: Interface Vlan4094 - MLAG_PEER = 'up'
      - interfaces:
        - name: Vlan130
          status: up
        result_overwrite:
          custom_field: Interface Vlan130 - Tenant_A_APP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan131
          status: up
        result_overwrite:
          custom_field: Interface Vlan131 - Tenant_A_APP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3011
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3011 - MLAG_PEER_L3_iBGP: vrf Tenant_A_APP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan140
          status: up
        result_overwrite:
          custom_field: Interface Vlan140 - Tenant_A_DB_BZone_1 = 'up'
      - interfaces:
        - name: Vlan141
          status: up
        result_overwrite:
          custom_field: Interface Vlan141 - Tenant_A_DB_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3012
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3012 - MLAG_PEER_L3_iBGP: vrf Tenant_A_DB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan110
          status: up
        result_overwrite:
          custom_field: Interface Vlan110 - Tenant_A_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan111
          status: up
        result_overwrite:
          custom_field: Interface Vlan111 - Tenant_A_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan112
          status: up
        result_overwrite:
          custom_field: Interface Vlan112 - Tenant_A_OP_Zone_3 = 'up'
      - interfaces:
        - name: Vlan3009
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3009 - MLAG_PEER_L3_iBGP: vrf Tenant_A_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan150
          status: up
        result_overwrite:
          custom_field: Interface Vlan150 - Tenant_A_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3013
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3013 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan120
          status: up
        result_overwrite:
          custom_field: Interface Vlan120 - Tenant_A_WEB_Zone_1 = 'up'
      - interfaces:
        - name: Vlan121
          status: up
        result_overwrite:
          custom_field: Interface Vlan121 - Tenant_A_WEBZone_2 = 'up'
      - interfaces:
        - name: Vlan3010
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3010 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WEB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan210
          status: up
        result_overwrite:
          custom_field: Interface Vlan210 - Tenant_B_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan211
          status: up
        result_overwrite:
          custom_field: Interface Vlan211 - Tenant_B_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3019
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3019 - MLAG_PEER_L3_iBGP: vrf Tenant_B_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan250
          status: up
        result_overwrite:
          custom_field: Interface Vlan250 - Tenant_B_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3020
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3020 - MLAG_PEER_L3_iBGP: vrf Tenant_B_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan310
          status: up
        result_overwrite:
          custom_field: Interface Vlan310 - Tenant_C_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan311
          status: up
        result_overwrite:
          custom_field: Interface Vlan311 - Tenant_C_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3029
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3029 - MLAG_PEER_L3_iBGP: vrf Tenant_C_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan350
          status: up
        result_overwrite:
          custom_field: Interface Vlan350 - Tenant_C_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3030
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3030 - MLAG_PEER_L3_iBGP: vrf Tenant_C_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Loopback0
          status: up
        result_overwrite:
          custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
      - interfaces:
        - name: Loopback1
          status: up
        result_overwrite:
          custom_field: Interface Loopback1 - VTEP_VXLAN_Tunnel_Source = 'up'
      - interfaces:
        - name: Loopback100
          status: up
        result_overwrite:
          custom_field: Interface Loopback100 - Tenant_A_OP_Zone_VTEP_DIAGNOSTICS
            = 'up'
      - interfaces:
        - name: Vxlan1
          status: up
        result_overwrite:
          custom_field: Interface Vxlan1 = 'up'
      DC1-LEAF2A:
      - interfaces:
        - name: Ethernet3
          status: up
        result_overwrite:
          custom_field: Interface Ethernet3 - MLAG_PEER_DC1-LEAF2B_Ethernet3 = 'up'
      - interfaces:
        - name: Ethernet4
          status: up
        result_overwrite:
          custom_field: Interface Ethernet4 - MLAG_PEER_DC1-LEAF2B_Ethernet4 = 'up'
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - P2P_LINK_TO_DC1-SPINE1_Ethernet3 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - P2P_LINK_TO_DC1-SPINE2_Ethernet3 = 'up'
      - interfaces:
        - name: Ethernet5
          status: up
        result_overwrite:
          custom_field: Interface Ethernet5 - DC1-L2LEAF2A_Ethernet1 = 'up'
      - interfaces:
        - name: Port-Channel3
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel3 - MLAG_PEER_DC1-LEAF2B_Po3 = 'up'
      - interfaces:
        - name: Port-Channel5
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel5 - DC1-L2LEAF2A_Po1 = 'up'
      - interfaces:
        - name: Vlan4093
          status: up
        result_overwrite:
          custom_field: Interface Vlan4093 - MLAG_PEER_L3_PEERING = 'up'
      - interfaces:
        - name: Vlan4094
          status: up
        result_overwrite:
          custom_field: Interface Vlan4094 - MLAG_PEER = 'up'
      - interfaces:
        - name: Vlan130
          status: up
        result_overwrite:
          custom_field: Interface Vlan130 - Tenant_A_APP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan131
          status: up
        result_overwrite:
          custom_field: Interface Vlan131 - Tenant_A_APP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3011
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3011 - MLAG_PEER_L3_iBGP: vrf Tenant_A_APP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan140
          status: up
        result_overwrite:
          custom_field: Interface Vlan140 - Tenant_A_DB_BZone_1 = 'up'
      - interfaces:
        - name: Vlan141
          status: up
        result_overwrite:
          custom_field: Interface Vlan141 - Tenant_A_DB_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3012
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3012 - MLAG_PEER_L3_iBGP: vrf Tenant_A_DB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan110
          status: up
        result_overwrite:
          custom_field: Interface Vlan110 - Tenant_A_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan111
          status: up
        result_overwrite:
          custom_field: Interface Vlan111 - Tenant_A_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan112
          status: up
        result_overwrite:
          custom_field: Interface Vlan112 - Tenant_A_OP_Zone_3 = 'up'
      - interfaces:
        - name: Vlan3009
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3009 - MLAG_PEER_L3_iBGP: vrf Tenant_A_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan150
          status: up
        result_overwrite:
          custom_field: Interface Vlan150 - Tenant_A_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3013
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3013 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan120
          status: up
        result_overwrite:
          custom_field: Interface Vlan120 - Tenant_A_WEB_Zone_1 = 'up'
      - interfaces:
        - name: Vlan121
          status: up
        result_overwrite:
          custom_field: Interface Vlan121 - Tenant_A_WEBZone_2 = 'up'
      - interfaces:
        - name: Vlan3010
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3010 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WEB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan210
          status: up
        result_overwrite:
          custom_field: Interface Vlan210 - Tenant_B_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan211
          status: up
        result_overwrite:
          custom_field: Interface Vlan211 - Tenant_B_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3019
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3019 - MLAG_PEER_L3_iBGP: vrf Tenant_B_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan250
          status: up
        result_overwrite:
          custom_field: Interface Vlan250 - Tenant_B_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3020
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3020 - MLAG_PEER_L3_iBGP: vrf Tenant_B_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan310
          status: up
        result_overwrite:
          custom_field: Interface Vlan310 - Tenant_C_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan311
          status: up
        result_overwrite:
          custom_field: Interface Vlan311 - Tenant_C_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3029
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3029 - MLAG_PEER_L3_iBGP: vrf Tenant_C_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan350
          status: up
        result_overwrite:
          custom_field: Interface Vlan350 - Tenant_C_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3030
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3030 - MLAG_PEER_L3_iBGP: vrf Tenant_C_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Loopback0
          status: up
        result_overwrite:
          custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
      - interfaces:
        - name: Loopback1
          status: up
        result_overwrite:
          custom_field: Interface Loopback1 - VTEP_VXLAN_Tunnel_Source = 'up'
      - interfaces:
        - name: Loopback100
          status: up
        result_overwrite:
          custom_field: Interface Loopback100 - Tenant_A_OP_Zone_VTEP_DIAGNOSTICS
            = 'up'
      - interfaces:
        - name: Vxlan1
          status: up
        result_overwrite:
          custom_field: Interface Vxlan1 = 'up'
      DC1-LEAF2B:
      - interfaces:
        - name: Ethernet3
          status: up
        result_overwrite:
          custom_field: Interface Ethernet3 - MLAG_PEER_DC1-LEAF2A_Ethernet3 = 'up'
      - interfaces:
        - name: Ethernet4
          status: up
        result_overwrite:
          custom_field: Interface Ethernet4 - MLAG_PEER_DC1-LEAF2A_Ethernet4 = 'up'
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - P2P_LINK_TO_DC1-SPINE1_Ethernet4 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - P2P_LINK_TO_DC1-SPINE2_Ethernet4 = 'up'
      - interfaces:
        - name: Ethernet5
          status: up
        result_overwrite:
          custom_field: Interface Ethernet5 - DC1-L2LEAF2A_Ethernet2 = 'up'
      - interfaces:
        - name: Port-Channel3
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel3 - MLAG_PEER_DC1-LEAF2A_Po3 = 'up'
      - interfaces:
        - name: Port-Channel5
          status: up
        result_overwrite:
          custom_field: Interface Port-Channel5 - DC1-L2LEAF2A_Po1 = 'up'
      - interfaces:
        - name: Vlan4093
          status: up
        result_overwrite:
          custom_field: Interface Vlan4093 - MLAG_PEER_L3_PEERING = 'up'
      - interfaces:
        - name: Vlan4094
          status: up
        result_overwrite:
          custom_field: Interface Vlan4094 - MLAG_PEER = 'up'
      - interfaces:
        - name: Vlan130
          status: up
        result_overwrite:
          custom_field: Interface Vlan130 - Tenant_A_APP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan131
          status: up
        result_overwrite:
          custom_field: Interface Vlan131 - Tenant_A_APP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3011
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3011 - MLAG_PEER_L3_iBGP: vrf Tenant_A_APP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan140
          status: up
        result_overwrite:
          custom_field: Interface Vlan140 - Tenant_A_DB_BZone_1 = 'up'
      - interfaces:
        - name: Vlan141
          status: up
        result_overwrite:
          custom_field: Interface Vlan141 - Tenant_A_DB_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3012
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3012 - MLAG_PEER_L3_iBGP: vrf Tenant_A_DB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan110
          status: up
        result_overwrite:
          custom_field: Interface Vlan110 - Tenant_A_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan111
          status: up
        result_overwrite:
          custom_field: Interface Vlan111 - Tenant_A_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan112
          status: up
        result_overwrite:
          custom_field: Interface Vlan112 - Tenant_A_OP_Zone_3 = 'up'
      - interfaces:
        - name: Vlan3009
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3009 - MLAG_PEER_L3_iBGP: vrf Tenant_A_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan150
          status: up
        result_overwrite:
          custom_field: Interface Vlan150 - Tenant_A_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3013
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3013 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan120
          status: up
        result_overwrite:
          custom_field: Interface Vlan120 - Tenant_A_WEB_Zone_1 = 'up'
      - interfaces:
        - name: Vlan121
          status: up
        result_overwrite:
          custom_field: Interface Vlan121 - Tenant_A_WEBZone_2 = 'up'
      - interfaces:
        - name: Vlan3010
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3010 - MLAG_PEER_L3_iBGP: vrf Tenant_A_WEB_Zone
            = ''up'''
      - interfaces:
        - name: Vlan210
          status: up
        result_overwrite:
          custom_field: Interface Vlan210 - Tenant_B_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan211
          status: up
        result_overwrite:
          custom_field: Interface Vlan211 - Tenant_B_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3019
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3019 - MLAG_PEER_L3_iBGP: vrf Tenant_B_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan250
          status: up
        result_overwrite:
          custom_field: Interface Vlan250 - Tenant_B_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3020
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3020 - MLAG_PEER_L3_iBGP: vrf Tenant_B_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Vlan310
          status: up
        result_overwrite:
          custom_field: Interface Vlan310 - Tenant_C_OP_Zone_1 = 'up'
      - interfaces:
        - name: Vlan311
          status: up
        result_overwrite:
          custom_field: Interface Vlan311 - Tenant_C_OP_Zone_2 = 'up'
      - interfaces:
        - name: Vlan3029
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3029 - MLAG_PEER_L3_iBGP: vrf Tenant_C_OP_Zone
            = ''up'''
      - interfaces:
        - name: Vlan350
          status: up
        result_overwrite:
          custom_field: Interface Vlan350 - Tenant_C_WAN_Zone_1 = 'up'
      - interfaces:
        - name: Vlan3030
          status: up
        result_overwrite:
          custom_field: 'Interface Vlan3030 - MLAG_PEER_L3_iBGP: vrf Tenant_C_WAN_Zone
            = ''up'''
      - interfaces:
        - name: Loopback0
          status: up
        result_overwrite:
          custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
      - interfaces:
        - name: Loopback1
          status: up
        result_overwrite:
          custom_field: Interface Loopback1 - VTEP_VXLAN_Tunnel_Source = 'up'
      - interfaces:
        - name: Loopback100
          status: up
        result_overwrite:
          custom_field: Interface Loopback100 - Tenant_A_OP_Zone_VTEP_DIAGNOSTICS
            = 'up'
      - interfaces:
        - name: Vxlan1
          status: up
        result_overwrite:
          custom_field: Interface Vxlan1 = 'up'
      DC1-SPINE1:
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - P2P_LINK_TO_DC1-LEAF1A_Ethernet1 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - P2P_LINK_TO_DC1-LEAF1B_Ethernet1 = 'up'
      - interfaces:
        - name: Ethernet3
          status: up
        result_overwrite:
          custom_field: Interface Ethernet3 - P2P_LINK_TO_DC1-LEAF2A_Ethernet1 = 'up'
      - interfaces:
        - name: Ethernet4
          status: up
        result_overwrite:
          custom_field: Interface Ethernet4 - P2P_LINK_TO_DC1-LEAF2B_Ethernet1 = 'up'
      - interfaces:
        - name: Loopback0
          status: up
        result_overwrite:
          custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
      DC1-SPINE2:
      - interfaces:
        - name: Ethernet1
          status: up
        result_overwrite:
          custom_field: Interface Ethernet1 - P2P_LINK_TO_DC1-LEAF1A_Ethernet2 = 'up'
      - interfaces:
        - name: Ethernet2
          status: up
        result_overwrite:
          custom_field: Interface Ethernet2 - P2P_LINK_TO_DC1-LEAF1B_Ethernet2 = 'up'
      - interfaces:
        - name: Ethernet3
          status: up
        result_overwrite:
          custom_field: Interface Ethernet3 - P2P_LINK_TO_DC1-LEAF2A_Ethernet2 = 'up'
      - interfaces:
        - name: Ethernet4
          status: up
        result_overwrite:
          custom_field: Interface Ethernet4 - P2P_LINK_TO_DC1-LEAF2B_Ethernet2 = 'up'
      - interfaces:
        - name: Loopback0
          status: up
        result_overwrite:
          custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
    expected_output: null
    criteria: names
    filter:
    - DC1-L2LEAF1A
    - DC1-L2LEAF2A
    - DC1-LEAF1A
    - DC1-LEAF1B
    - DC1-LEAF2A
    - DC1-LEAF2B
    - DC1-SPINE1
    - DC1-SPINE2
  - name: test_lldp_neighbors
    description: Verifies LLDP neighbors
    test_criteria: The test will pass if each of the provided LLDP neighbors is present
      and connected to the specified port and device. The test will fail if any of
      the following conditions are met - The provided LLDP neighbor is not found.  -
      The system name or port of the LLDP neighbor does not match the provided information.
    test_id: TN_1.9
    show_cmd: show lldp neighbors
    inputs:
      DC1-L2LEAF1A:
      - neighbors:
        - neighbor_device: DC1-LEAF1A
          neighbor_port: Ethernet5
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-LEAF1A Ethernet5'
      - neighbors:
        - neighbor_device: DC1-LEAF1B
          neighbor_port: Ethernet5
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-LEAF1B Ethernet5'
      DC1-L2LEAF2A:
      - neighbors:
        - neighbor_device: DC1-LEAF2A
          neighbor_port: Ethernet5
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-LEAF2A Ethernet5'
      - neighbors:
        - neighbor_device: DC1-LEAF2B
          neighbor_port: Ethernet5
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-LEAF2B Ethernet5'
      DC1-LEAF1A:
      - neighbors:
        - neighbor_device: DC1-LEAF1B
          neighbor_port: Ethernet3
          port: Ethernet3
        result_overwrite:
          custom_field: 'Local: Ethernet3 - Remote: DC1-LEAF1B Ethernet3'
      - neighbors:
        - neighbor_device: DC1-LEAF1B
          neighbor_port: Ethernet4
          port: Ethernet4
        result_overwrite:
          custom_field: 'Local: Ethernet4 - Remote: DC1-LEAF1B Ethernet4'
      - neighbors:
        - neighbor_device: DC1-SPINE1
          neighbor_port: Ethernet1
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-SPINE1 Ethernet1'
      - neighbors:
        - neighbor_device: DC1-SPINE2
          neighbor_port: Ethernet1
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-SPINE2 Ethernet1'
      - neighbors:
        - neighbor_device: DC1-L2LEAF1A
          neighbor_port: Ethernet1
          port: Ethernet5
        result_overwrite:
          custom_field: 'Local: Ethernet5 - Remote: DC1-L2LEAF1A Ethernet1'
      DC1-LEAF1B:
      - neighbors:
        - neighbor_device: DC1-LEAF1A
          neighbor_port: Ethernet3
          port: Ethernet3
        result_overwrite:
          custom_field: 'Local: Ethernet3 - Remote: DC1-LEAF1A Ethernet3'
      - neighbors:
        - neighbor_device: DC1-LEAF1A
          neighbor_port: Ethernet4
          port: Ethernet4
        result_overwrite:
          custom_field: 'Local: Ethernet4 - Remote: DC1-LEAF1A Ethernet4'
      - neighbors:
        - neighbor_device: DC1-SPINE1
          neighbor_port: Ethernet2
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-SPINE1 Ethernet2'
      - neighbors:
        - neighbor_device: DC1-SPINE2
          neighbor_port: Ethernet2
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-SPINE2 Ethernet2'
      - neighbors:
        - neighbor_device: DC1-L2LEAF1A
          neighbor_port: Ethernet2
          port: Ethernet5
        result_overwrite:
          custom_field: 'Local: Ethernet5 - Remote: DC1-L2LEAF1A Ethernet2'
      DC1-LEAF2A:
      - neighbors:
        - neighbor_device: DC1-LEAF2B
          neighbor_port: Ethernet3
          port: Ethernet3
        result_overwrite:
          custom_field: 'Local: Ethernet3 - Remote: DC1-LEAF2B Ethernet3'
      - neighbors:
        - neighbor_device: DC1-LEAF2B
          neighbor_port: Ethernet4
          port: Ethernet4
        result_overwrite:
          custom_field: 'Local: Ethernet4 - Remote: DC1-LEAF2B Ethernet4'
      - neighbors:
        - neighbor_device: DC1-SPINE1
          neighbor_port: Ethernet3
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-SPINE1 Ethernet3'
      - neighbors:
        - neighbor_device: DC1-SPINE2
          neighbor_port: Ethernet3
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-SPINE2 Ethernet3'
      - neighbors:
        - neighbor_device: DC1-L2LEAF2A
          neighbor_port: Ethernet1
          port: Ethernet5
        result_overwrite:
          custom_field: 'Local: Ethernet5 - Remote: DC1-L2LEAF2A Ethernet1'
      DC1-LEAF2B:
      - neighbors:
        - neighbor_device: DC1-LEAF2A
          neighbor_port: Ethernet3
          port: Ethernet3
        result_overwrite:
          custom_field: 'Local: Ethernet3 - Remote: DC1-LEAF2A Ethernet3'
      - neighbors:
        - neighbor_device: DC1-LEAF2A
          neighbor_port: Ethernet4
          port: Ethernet4
        result_overwrite:
          custom_field: 'Local: Ethernet4 - Remote: DC1-LEAF2A Ethernet4'
      - neighbors:
        - neighbor_device: DC1-SPINE1
          neighbor_port: Ethernet4
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-SPINE1 Ethernet4'
      - neighbors:
        - neighbor_device: DC1-SPINE2
          neighbor_port: Ethernet4
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-SPINE2 Ethernet4'
      - neighbors:
        - neighbor_device: DC1-L2LEAF2A
          neighbor_port: Ethernet2
          port: Ethernet5
        result_overwrite:
          custom_field: 'Local: Ethernet5 - Remote: DC1-L2LEAF2A Ethernet2'
      DC1-SPINE1:
      - neighbors:
        - neighbor_device: DC1-LEAF1A
          neighbor_port: Ethernet1
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-LEAF1A Ethernet1'
      - neighbors:
        - neighbor_device: DC1-LEAF1B
          neighbor_port: Ethernet1
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-LEAF1B Ethernet1'
      - neighbors:
        - neighbor_device: DC1-LEAF2A
          neighbor_port: Ethernet1
          port: Ethernet3
        result_overwrite:
          custom_field: 'Local: Ethernet3 - Remote: DC1-LEAF2A Ethernet1'
      - neighbors:
        - neighbor_device: DC1-LEAF2B
          neighbor_port: Ethernet1
          port: Ethernet4
        result_overwrite:
          custom_field: 'Local: Ethernet4 - Remote: DC1-LEAF2B Ethernet1'
      DC1-SPINE2:
      - neighbors:
        - neighbor_device: DC1-LEAF1A
          neighbor_port: Ethernet2
          port: Ethernet1
        result_overwrite:
          custom_field: 'Local: Ethernet1 - Remote: DC1-LEAF1A Ethernet2'
      - neighbors:
        - neighbor_device: DC1-LEAF1B
          neighbor_port: Ethernet2
          port: Ethernet2
        result_overwrite:
          custom_field: 'Local: Ethernet2 - Remote: DC1-LEAF1B Ethernet2'
      - neighbors:
        - neighbor_device: DC1-LEAF2A
          neighbor_port: Ethernet2
          port: Ethernet3
        result_overwrite:
          custom_field: 'Local: Ethernet3 - Remote: DC1-LEAF2A Ethernet2'
      - neighbors:
        - neighbor_device: DC1-LEAF2B
          neighbor_port: Ethernet2
          port: Ethernet4
        result_overwrite:
          custom_field: 'Local: Ethernet4 - Remote: DC1-LEAF2B Ethernet2'
    expected_output: null
    criteria: names
    filter:
    - DC1-L2LEAF1A
    - DC1-L2LEAF2A
    - DC1-LEAF1A
    - DC1-LEAF1B
    - DC1-LEAF2A
    - DC1-LEAF2B
    - DC1-SPINE1
    - DC1-SPINE2
