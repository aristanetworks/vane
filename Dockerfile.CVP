# Create a container for the Vane CVP extension

# Use official Python3 supported container
FROM python:3.9-alpine3.18
MAINTAINER Professional Service: Software Services <eos-cs-sw@arista.com>

# Set an environment variable indicating this is the vane-cvp container
ENV VANE_CVP=true

# Configure some python settings for containers
#   Don't write .pyc files while working in the container
ENV PYTHONDONTWRITEBYTECODE 1
#   Don't buffer output while working in the container
ENV PYTHONBUFFERED 1
#   Don't store installation files in the container
ENV PIP_NO_CACHE_DIR 1

# Set the poetry version to use
ENV POETRY_VERSION 1.5.1

# Set the poetry virtual environment prompt
ENV POETRY_VIRTUALENVS_PROMPT vane-cvp-shell

# Set the container home (the directory where the container will start)
ENV CONTAINER_HOME /vane-data

# Install necessary packages
RUN apk update \
    && apk add --no-cache \
        bash \
        iputils-ping \
        make \
        ncurses \
        sudo

# Update pip and install the poetry package
RUN pip3 install --upgrade pip
RUN pip install poetry==${POETRY_VERSION}

# Create the /project directory and add it as a mountpoint
WORKDIR /project
COPY . .

# Set the poetry lock file as root first
RUN poetry lock

# Allow python install to run without being root
RUN chmod 777 /usr/local/lib/python*/site-packages /usr/local/bin

# Create the user/group that will be used in the container
# Set some defaults that can be overridden in the build command
ARG UNAME=cvp
ARG UPASS=cvpvane
ARG UID=10010
ARG GID=10010
# Create the sudo and UNAME groups and add the sudo group to sudoers
RUN addgroup -S -g 1002 sudo
# XXX temporarily remove the dialout group (group 20) so we can test on local machine
RUN delgroup dialout
RUN addgroup -S -g $GID $UNAME
RUN adduser -S -D -u $UID -G sudo -G $UNAME $UNAME \
    && echo "$UNAME ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$UNAME \
    && chmod 0440 /etc/sudoers.d/$UNAME

# Switch to the new user for when the container is run
USER $UNAME

# Copy the custom bashrc data to the CVP user's bashrc file and ensure it is
# owned by the CVP user
#   This creates a custom prompt with a notice to start the poetry shell (activate)
#   along with the 'activate' alias to activate the poetry shell
COPY resources/vane-bashrc /home/${UNAME}/.bashrc
RUN sudo chown ${UNAME}:${UNAME} /home/${UNAME}/.bashrc

# Install Vane (as the docker user)
RUN poetry install --without dev

# Create the CONTAINER_HOME directory
WORKDIR $CONTAINER_HOME

# Start the container in the CONTAINER_HOME directory
# and running the poetry shell
CMD ["/bin/bash"]
