{"report": {"environment": {}, "tests": [{"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_resolves_on_[kg-topology-CloudEosRR1]", "duration": 1.803507000033278, "run_index": 0, "setup": {"name": "setup", "duration": 0.22620050003752112, "outcome": "passed"}, "call": {"name": "call", "duration": 1.350903999991715, "outcome": "passed", "stdout": "\nOn router |kg-topology-CloudEosRR1|, DNS resolution is|True| for google.com.\n\nOn router |kg-topology-CloudEosRR1|, DNS resolution is|True| for cnn.com.\n\nOn router |kg-topology-CloudEosRR1|, DNS resolution is|True| for arista.com.\n\nTEST can |kg-topology-CloudEosRR1| resolve |google.com|.\nGIVEN URL is |google.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping google.com| is :\n\nPING google.com (172.217.4.238) 72(100) bytes of data.\n76 bytes from ord30s31-in-f14.1e100.net (172.217.4.238): icmp_seq=1 ttl=100 (truncated)\n76 bytes from ord30s31-in-f14.1e100.net (172.217.4.238): icmp_seq=2 ttl=100 (truncated)\n76 bytes from ord30s31-in-f14.1e100.net (172.217.4.238): icmp_seq=3 ttl=100 (truncated)\n76 bytes from ord30s31-in-f14.1e100.net (172.217.4.238): icmp_seq=4 ttl=100 (truncated)\n76 bytes from ord30s31-in-f14.1e100.net (172.217.4.238): icmp_seq=5 ttl=100 (truncated)\n\n--- google.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 62ms\nrtt min/avg/max/mdev = 20.606/20.618/20.634/0.091 ms, pipe 3, ipg/ewma 15.590/20.620 ms\n.\nTEST can |kg-topology-CloudEosRR1| resolve |cnn.com|.\nGIVEN URL is |cnn.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping cnn.com| is :\n\nPING cnn.com (151.101.65.67) 72(100) bytes of data.\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=1 ttl=39 time=11.3 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=2 ttl=39 time=11.3 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=3 ttl=39 time=11.3 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=4 ttl=39 time=11.3 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=5 ttl=39 time=11.3 ms\n\n--- cnn.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 44ms\nrtt min/avg/max/mdev = 11.333/11.364/11.394/0.118 ms, pipe 2, ipg/ewma 11.008/11.361 ms\n.\nTEST can |kg-topology-CloudEosRR1| resolve |arista.com|.\nGIVEN URL is |arista.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping arista.com| is :\n\nPING arista.com (64.68.200.46) 72(100) bytes of data.\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=1 ttl=39 time=23.3 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=2 ttl=39 time=23.3 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=3 ttl=39 time=23.2 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=4 ttl=39 time=23.2 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=5 ttl=39 time=23.3 ms\n\n--- arista.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 66ms\nrtt min/avg/max/mdev = 23.246/23.307/23.343/0.171 ms, pipe 3, ipg/ewma 16.678/23.324 ms\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.0002019999665208161, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_servers_are_reachable_on_[kg-topology-CloudEosRR1]", "duration": 5.358455200039316, "run_index": 1, "setup": {"name": "setup", "duration": 0.24344500002916902, "outcome": "passed"}, "call": {"name": "call", "duration": 4.871307399997022, "outcome": "failed", "longrepr": "self = <bin.tests.dns.test_dns.DNSTests object at 0x7fb5c43ba310>\ndut = {'connection': Node(connection=EapiConnection(transport=https://3.22.137.44:443//command-api)), 'name': 'kg-topology-C...TEM:\\n  name=system default-action=none\\nAccounting method list for DOT1X:\\n  name=dot1x default-action=none\\n'}, ...}}\ntests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}\n\n    def test_if_dns_servers_are_reachable_on_(self, dut, tests_definitions):\n        \"\"\" Verifies DNS servers are reachable via ping\n    \n            Args:\n              dut (dict): Encapsulates dut details including name, connection\n        \"\"\"\n    \n        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)\n        dns_servers = tops.test_parameters[\"dns_servers\"]\n        dns_vrf = tops.test_parameters[\"dns_vrf\"]\n    \n        for dns_server in dns_servers:\n            if dns_vrf:\n                show_cmd = f\"ping vrf {dns_vrf} ip {dns_server}\"\n            else:\n                show_cmd = f\"ping {dns_server}\"\n    \n            tops.return_show_cmd(show_cmd)\n            tops.actual_output = 'bytes from' in tops.show_cmd_txt\n            tops.test_result = tops.actual_output is tops.expected_output\n    \n            tops.output_msg += (f\"\\nOn router |{tops.dut_name}|, verifying NTP \"\n                                f\"server reachability for |{dns_server}| is \"\n                                f\"|{tops.test_result}|.\\n\")\n    \n            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '\n                             f'GIVEN server |{dns_server}|.\\n'\n                             'WHEN exception is |bytes from| '\n                             'string.\\n'\n                             f'THEN test case result is |{tops.test_result}|.\\n'\n                             f'OUTPUT of |{show_cmd}| is :\\n\\n{tops.show_cmd_txt}.\\n')\n    \n            tops.actual_results.append(tops.actual_output)\n            tops.expected_results.append(tops.expected_output)\n    \n        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results\n        tops.post_testcase()\n    \n>       assert tops.actual_results == tops.expected_results\nE       assert [False] == [True]\nE         At index 0 diff: False != True\nE         Full diff:\nE         - [True]\nE         + [False]\n\ntests/dns/test_dns.py:131: AssertionError"}, "teardown": {"name": "teardown", "duration": 0.00025779998395591974, "outcome": "passed"}, "outcome": "failed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_dns_configuration_on_[kg-topology-CloudEosRR1]", "duration": 1.4119982000556774, "run_index": 2, "setup": {"name": "setup", "duration": 0.2465391000150703, "outcome": "passed"}, "call": {"name": "call", "duration": 0.9186112000024877, "outcome": "passed", "stdout": "|kg-topology-CloudEosRR1| has the dns config |ip name-server vrf default 11.201.12.2\n|, expect the dns config |ip name-server vrf default 11.201.12.2\n|.\n\n\nTEST |kg-topology-CloudEosRR1| DNS config.\nGIVEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nWHEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nTHEN test case result is |True|.\n\nOUTPUT of |show running-config section name-server| is :\n\nip name-server vrf default 11.201.12.2\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.00030880002304911613, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_dns_configuration_on_[kg-topology-CloudEosRR2]", "duration": 0.967883899982553, "run_index": 3, "setup": {"name": "setup", "duration": 0.19133170001441613, "outcome": "passed"}, "call": {"name": "call", "duration": 0.5849947999813594, "outcome": "passed", "stdout": "|kg-topology-CloudEosRR2| has the dns config |ip name-server vrf default 11.201.12.2\n|, expect the dns config |ip name-server vrf default 11.201.12.2\n|.\n\n\nTEST |kg-topology-CloudEosRR2| DNS config.\nGIVEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nWHEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nTHEN test case result is |True|.\n\nOUTPUT of |show running-config section name-server| is :\n\nip name-server vrf default 11.201.12.2\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.00022569997236132622, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_resolves_on_[kg-topology-CloudEosRR2]", "duration": 1.381629600073211, "run_index": 4, "setup": {"name": "setup", "duration": 0.1867696000263095, "outcome": "passed"}, "call": {"name": "call", "duration": 1.0077913000131957, "outcome": "passed", "stdout": "\nOn router |kg-topology-CloudEosRR2|, DNS resolution is|True| for google.com.\n\nOn router |kg-topology-CloudEosRR2|, DNS resolution is|True| for cnn.com.\n\nOn router |kg-topology-CloudEosRR2|, DNS resolution is|True| for arista.com.\n\nTEST can |kg-topology-CloudEosRR2| resolve |google.com|.\nGIVEN URL is |google.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping google.com| is :\n\nPING google.com (172.217.6.110) 72(100) bytes of data.\n76 bytes from ord37s03-in-f14.1e100.net (172.217.6.110): icmp_seq=1 ttl=101 (truncated)\n76 bytes from ord37s03-in-f14.1e100.net (172.217.6.110): icmp_seq=2 ttl=101 (truncated)\n76 bytes from ord37s03-in-f14.1e100.net (172.217.6.110): icmp_seq=3 ttl=101 (truncated)\n76 bytes from ord37s03-in-f14.1e100.net (172.217.6.110): icmp_seq=4 ttl=101 (truncated)\n76 bytes from ord37s03-in-f14.1e100.net (172.217.6.110): icmp_seq=5 ttl=101 (truncated)\n\n--- google.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 70ms\nrtt min/avg/max/mdev = 19.848/19.930/20.173/0.153 ms, pipe 2, ipg/ewma 17.563/19.923 ms\n.\nTEST can |kg-topology-CloudEosRR2| resolve |cnn.com|.\nGIVEN URL is |cnn.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping cnn.com| is :\n\nPING cnn.com (151.101.65.67) 72(100) bytes of data.\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=1 ttl=39 time=10.5 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=2 ttl=39 time=10.6 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=3 ttl=39 time=10.5 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=4 ttl=39 time=10.5 ms\n80 bytes from 151.101.65.67 (151.101.65.67): icmp_seq=5 ttl=39 time=10.5 ms\n\n--- cnn.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 43ms\nrtt min/avg/max/mdev = 10.556/10.589/10.668/0.136 ms, pipe 2, ipg/ewma 10.788/10.583 ms\n.\nTEST can |kg-topology-CloudEosRR2| resolve |arista.com|.\nGIVEN URL is |arista.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping arista.com| is :\n\nPING arista.com (64.68.200.46) 72(100) bytes of data.\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=1 ttl=39 time=22.8 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=2 ttl=39 time=22.8 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=3 ttl=39 time=22.8 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=4 ttl=39 time=22.9 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=5 ttl=39 time=22.9 ms\n\n--- arista.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 66ms\nrtt min/avg/max/mdev = 22.842/22.897/22.998/0.199 ms, pipe 3, ipg/ewma 16.567/22.886 ms\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.00029910000739619136, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_resolves_on_[kg-topology-CloudEOSEdge1]", "duration": 1.394875200057868, "run_index": 5, "setup": {"name": "setup", "duration": 0.1902482000296004, "outcome": "passed"}, "call": {"name": "call", "duration": 1.0141101999906823, "outcome": "passed", "stdout": "\nOn router |kg-topology-CloudEOSEdge1|, DNS resolution is|True| for google.com.\n\nOn router |kg-topology-CloudEOSEdge1|, DNS resolution is|True| for cnn.com.\n\nOn router |kg-topology-CloudEOSEdge1|, DNS resolution is|True| for arista.com.\n\nTEST can |kg-topology-CloudEOSEdge1| resolve |google.com|.\nGIVEN URL is |google.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping google.com| is :\n\nPING google.com (172.217.5.14) 72(100) bytes of data.\n76 bytes from lga15s49-in-f14.1e100.net (172.217.5.14): icmp_seq=1 ttl=101 (truncated)\n76 bytes from lga15s49-in-f14.1e100.net (172.217.5.14): icmp_seq=2 ttl=101 (truncated)\n76 bytes from lga15s49-in-f14.1e100.net (172.217.5.14): icmp_seq=3 ttl=101 (truncated)\n76 bytes from lga15s49-in-f14.1e100.net (172.217.5.14): icmp_seq=4 ttl=101 (truncated)\n76 bytes from lga15s49-in-f14.1e100.net (172.217.5.14): icmp_seq=5 ttl=101 (truncated)\n\n--- google.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 62ms\nrtt min/avg/max/mdev = 20.885/20.939/21.070/0.145 ms, pipe 3, ipg/ewma 15.556/21.003 ms\n.\nTEST can |kg-topology-CloudEOSEdge1| resolve |cnn.com|.\nGIVEN URL is |cnn.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping cnn.com| is :\n\nPING cnn.com (151.101.129.67) 72(100) bytes of data.\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=1 ttl=39 time=11.4 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=2 ttl=39 time=11.4 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=3 ttl=39 time=11.3 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=4 ttl=39 time=11.2 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=5 ttl=39 time=11.2 ms\n\n--- cnn.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 43ms\nrtt min/avg/max/mdev = 11.256/11.348/11.478/0.083 ms, pipe 2, ipg/ewma 10.996/11.407 ms\n.\nTEST can |kg-topology-CloudEOSEdge1| resolve |arista.com|.\nGIVEN URL is |arista.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping arista.com| is :\n\nPING arista.com (64.68.200.46) 72(100) bytes of data.\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=1 ttl=39 time=23.5 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=2 ttl=39 time=23.3 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=3 ttl=39 time=23.3 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=4 ttl=39 time=23.3 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=5 ttl=39 time=23.4 ms\n\n--- arista.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 71ms\nrtt min/avg/max/mdev = 23.323/23.398/23.511/0.181 ms, pipe 3, ipg/ewma 17.841/23.454 ms\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.0002686000079847872, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_servers_are_reachable_on_[kg-topology-CloudEOSEdge1]", "duration": 4.995311599981505, "run_index": 6, "setup": {"name": "setup", "duration": 0.18860759999370202, "outcome": "passed"}, "call": {"name": "call", "duration": 4.617833600030281, "outcome": "failed", "longrepr": "self = <bin.tests.dns.test_dns.DNSTests object at 0x7f676a5c05e0>\ndut = {'connection': Node(connection=EapiConnection(transport=https://3.132.90.164:443//command-api)), 'name': 'kg-topology-...TEM:\\n  name=system default-action=none\\nAccounting method list for DOT1X:\\n  name=dot1x default-action=none\\n'}, ...}}\ntests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}\n\n    def test_if_dns_servers_are_reachable_on_(self, dut, tests_definitions):\n        \"\"\" Verifies DNS servers are reachable via ping\n    \n            Args:\n              dut (dict): Encapsulates dut details including name, connection\n        \"\"\"\n    \n        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)\n        dns_servers = tops.test_parameters[\"dns_servers\"]\n        dns_vrf = tops.test_parameters[\"dns_vrf\"]\n    \n        for dns_server in dns_servers:\n            if dns_vrf:\n                show_cmd = f\"ping vrf {dns_vrf} ip {dns_server}\"\n            else:\n                show_cmd = f\"ping {dns_server}\"\n    \n            tops.return_show_cmd(show_cmd)\n            tops.actual_output = 'bytes from' in tops.show_cmd_txt\n            tops.test_result = tops.actual_output is tops.expected_output\n    \n            tops.output_msg += (f\"\\nOn router |{tops.dut_name}|, verifying NTP \"\n                                f\"server reachability for |{dns_server}| is \"\n                                f\"|{tops.test_result}|.\\n\")\n    \n            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '\n                             f'GIVEN server |{dns_server}|.\\n'\n                             'WHEN exception is |bytes from| '\n                             'string.\\n'\n                             f'THEN test case result is |{tops.test_result}|.\\n'\n                             f'OUTPUT of |{show_cmd}| is :\\n\\n{tops.show_cmd_txt}.\\n')\n    \n            tops.actual_results.append(tops.actual_output)\n            tops.expected_results.append(tops.expected_output)\n    \n        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results\n        tops.post_testcase()\n    \n>       assert tops.actual_results == tops.expected_results\nE       assert [False] == [True]\nE         At index 0 diff: False != True\nE         Full diff:\nE         - [True]\nE         + [False]\n\ntests/dns/test_dns.py:131: AssertionError"}, "teardown": {"name": "teardown", "duration": 0.0002627999638207257, "outcome": "passed"}, "outcome": "failed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_dns_configuration_on_[kg-topology-CloudEOSEdge1]", "duration": 0.830669199989643, "run_index": 7, "setup": {"name": "setup", "duration": 0.18474320002133027, "outcome": "passed"}, "call": {"name": "call", "duration": 0.4609398999600671, "outcome": "passed", "stdout": "|kg-topology-CloudEOSEdge1| has the dns config |ip name-server vrf default 11.201.12.2\n|, expect the dns config |ip name-server vrf default 11.201.12.2\n|.\n\n\nTEST |kg-topology-CloudEOSEdge1| DNS config.\nGIVEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nWHEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nTHEN test case result is |True|.\n\nOUTPUT of |show running-config section name-server| is :\n\nip name-server vrf default 11.201.12.2\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.00024289998691529036, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_servers_are_reachable_on_[kg-topology-CloudEOSEdge2]", "duration": 5.035013000015169, "run_index": 8, "setup": {"name": "setup", "duration": 0.18963849998544902, "outcome": "passed"}, "call": {"name": "call", "duration": 4.655510200012941, "outcome": "failed", "longrepr": "self = <bin.tests.dns.test_dns.DNSTests object at 0x7f28a1f31490>\ndut = {'connection': Node(connection=EapiConnection(transport=https://3.131.34.190:443//command-api)), 'name': 'kg-topology-...TEM:\\n  name=system default-action=none\\nAccounting method list for DOT1X:\\n  name=dot1x default-action=none\\n'}, ...}}\ntests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}\n\n    def test_if_dns_servers_are_reachable_on_(self, dut, tests_definitions):\n        \"\"\" Verifies DNS servers are reachable via ping\n    \n            Args:\n              dut (dict): Encapsulates dut details including name, connection\n        \"\"\"\n    \n        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)\n        dns_servers = tops.test_parameters[\"dns_servers\"]\n        dns_vrf = tops.test_parameters[\"dns_vrf\"]\n    \n        for dns_server in dns_servers:\n            if dns_vrf:\n                show_cmd = f\"ping vrf {dns_vrf} ip {dns_server}\"\n            else:\n                show_cmd = f\"ping {dns_server}\"\n    \n            tops.return_show_cmd(show_cmd)\n            tops.actual_output = 'bytes from' in tops.show_cmd_txt\n            tops.test_result = tops.actual_output is tops.expected_output\n    \n            tops.output_msg += (f\"\\nOn router |{tops.dut_name}|, verifying NTP \"\n                                f\"server reachability for |{dns_server}| is \"\n                                f\"|{tops.test_result}|.\\n\")\n    \n            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '\n                             f'GIVEN server |{dns_server}|.\\n'\n                             'WHEN exception is |bytes from| '\n                             'string.\\n'\n                             f'THEN test case result is |{tops.test_result}|.\\n'\n                             f'OUTPUT of |{show_cmd}| is :\\n\\n{tops.show_cmd_txt}.\\n')\n    \n            tops.actual_results.append(tops.actual_output)\n            tops.expected_results.append(tops.expected_output)\n    \n        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results\n        tops.post_testcase()\n    \n>       assert tops.actual_results == tops.expected_results\nE       assert [False] == [True]\nE         At index 0 diff: False != True\nE         Full diff:\nE         - [True]\nE         + [False]\n\ntests/dns/test_dns.py:131: AssertionError"}, "teardown": {"name": "teardown", "duration": 0.00022580003133043647, "outcome": "passed"}, "outcome": "failed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_servers_are_reachable_on_[kg-topology-CloudEosRR2]", "duration": 5.067618099972606, "run_index": 9, "setup": {"name": "setup", "duration": 0.21890019997954369, "outcome": "passed"}, "call": {"name": "call", "duration": 4.62950219999766, "outcome": "failed", "longrepr": "self = <bin.tests.dns.test_dns.DNSTests object at 0x7fb5c408cca0>\ndut = {'connection': Node(connection=EapiConnection(transport=https://3.131.6.163:443//command-api)), 'name': 'kg-topology-C...TEM:\\n  name=system default-action=none\\nAccounting method list for DOT1X:\\n  name=dot1x default-action=none\\n'}, ...}}\ntests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}\n\n    def test_if_dns_servers_are_reachable_on_(self, dut, tests_definitions):\n        \"\"\" Verifies DNS servers are reachable via ping\n    \n            Args:\n              dut (dict): Encapsulates dut details including name, connection\n        \"\"\"\n    \n        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)\n        dns_servers = tops.test_parameters[\"dns_servers\"]\n        dns_vrf = tops.test_parameters[\"dns_vrf\"]\n    \n        for dns_server in dns_servers:\n            if dns_vrf:\n                show_cmd = f\"ping vrf {dns_vrf} ip {dns_server}\"\n            else:\n                show_cmd = f\"ping {dns_server}\"\n    \n            tops.return_show_cmd(show_cmd)\n            tops.actual_output = 'bytes from' in tops.show_cmd_txt\n            tops.test_result = tops.actual_output is tops.expected_output\n    \n            tops.output_msg += (f\"\\nOn router |{tops.dut_name}|, verifying NTP \"\n                                f\"server reachability for |{dns_server}| is \"\n                                f\"|{tops.test_result}|.\\n\")\n    \n            tops.comment += (f'TEST NTP servers are reachable on |{tops.dut_name}| '\n                             f'GIVEN server |{dns_server}|.\\n'\n                             'WHEN exception is |bytes from| '\n                             'string.\\n'\n                             f'THEN test case result is |{tops.test_result}|.\\n'\n                             f'OUTPUT of |{show_cmd}| is :\\n\\n{tops.show_cmd_txt}.\\n')\n    \n            tops.actual_results.append(tops.actual_output)\n            tops.expected_results.append(tops.expected_output)\n    \n        tops.actual_output, tops.expected_output = tops.actual_results, tops.expected_results\n        tops.post_testcase()\n    \n>       assert tops.actual_results == tops.expected_results\nE       assert [False] == [True]\nE         At index 0 diff: False != True\nE         Full diff:\nE         - [True]\nE         + [False]\n\ntests/dns/test_dns.py:131: AssertionError"}, "teardown": {"name": "teardown", "duration": 0.0003155000158585608, "outcome": "passed"}, "outcome": "failed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_if_dns_resolves_on_[kg-topology-CloudEOSEdge2]", "duration": 1.397515700024087, "run_index": 10, "setup": {"name": "setup", "duration": 0.18525270000100136, "outcome": "passed"}, "call": {"name": "call", "duration": 1.0265132000204176, "outcome": "passed", "stdout": "\nOn router |kg-topology-CloudEOSEdge2|, DNS resolution is|True| for google.com.\n\nOn router |kg-topology-CloudEOSEdge2|, DNS resolution is|True| for cnn.com.\n\nOn router |kg-topology-CloudEOSEdge2|, DNS resolution is|True| for arista.com.\n\nTEST can |kg-topology-CloudEOSEdge2| resolve |google.com|.\nGIVEN URL is |google.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping google.com| is :\n\nPING google.com (172.217.0.14) 72(100) bytes of data.\n76 bytes from ord38s04-in-f14.1e100.net (172.217.0.14): icmp_seq=1 ttl=101 (truncated)\n76 bytes from ord38s04-in-f14.1e100.net (172.217.0.14): icmp_seq=2 ttl=101 (truncated)\n76 bytes from ord38s04-in-f14.1e100.net (172.217.0.14): icmp_seq=3 ttl=101 (truncated)\n76 bytes from ord38s04-in-f14.1e100.net (172.217.0.14): icmp_seq=4 ttl=101 (truncated)\n76 bytes from ord38s04-in-f14.1e100.net (172.217.0.14): icmp_seq=5 ttl=101 (truncated)\n\n--- google.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 74ms\nrtt min/avg/max/mdev = 20.202/20.510/21.624/0.558 ms, pipe 2, ipg/ewma 18.633/21.048 ms\n.\nTEST can |kg-topology-CloudEOSEdge2| resolve |cnn.com|.\nGIVEN URL is |cnn.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping cnn.com| is :\n\nPING cnn.com (151.101.129.67) 72(100) bytes of data.\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=1 ttl=39 time=11.9 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=2 ttl=39 time=10.5 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=3 ttl=39 time=10.4 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=4 ttl=39 time=10.4 ms\n80 bytes from 151.101.129.67 (151.101.129.67): icmp_seq=5 ttl=39 time=10.4 ms\n\n--- cnn.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 46ms\nrtt min/avg/max/mdev = 10.463/10.787/11.934/0.574 ms, pipe 2, ipg/ewma 11.654/11.338 ms\n.\nTEST can |kg-topology-CloudEOSEdge2| resolve |arista.com|.\nGIVEN URL is |arista.com|.\nWHEN exception is |Name or service not known| string.\nTHEN test case result is |True|.\nOUTPUT of |ping arista.com| is :\n\nPING arista.com (64.68.200.46) 72(100) bytes of data.\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=1 ttl=39 time=24.8 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=2 ttl=39 time=22.9 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=3 ttl=39 time=22.9 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=4 ttl=39 time=23.0 ms\n80 bytes from url-fwd.easydns.com (64.68.200.46): icmp_seq=5 ttl=39 time=22.9 ms\n\n--- arista.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 70ms\nrtt min/avg/max/mdev = 22.948/23.356/24.841/0.755 ms, pipe 3, ipg/ewma 17.517/24.072 ms\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.0004971000016666949, "outcome": "passed"}, "outcome": "passed"}, {"name": "tests/dns/test_dns.py::DNSTests::test_dns_configuration_on_[kg-topology-CloudEOSEdge2]", "duration": 0.8742203000583686, "run_index": 11, "setup": {"name": "setup", "duration": 0.1961874000262469, "outcome": "passed"}, "call": {"name": "call", "duration": 0.481315299984999, "outcome": "passed", "stdout": "|kg-topology-CloudEOSEdge2| has the dns config |ip name-server vrf default 11.201.12.2\n|, expect the dns config |ip name-server vrf default 11.201.12.2\n|.\n\n\nTEST |kg-topology-CloudEOSEdge2| DNS config.\nGIVEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nWHEN DNS config |ip name-server vrf default 11.201.12.2\n|.\nTHEN test case result is |True|.\n\nOUTPUT of |show running-config section name-server| is :\n\nip name-server vrf default 11.201.12.2\n.\n\n"}, "teardown": {"name": "teardown", "duration": 0.0005302000208757818, "outcome": "passed"}, "outcome": "passed"}], "summary": {"passed": 8, "failed": 4, "num_tests": 12, "duration": 17.8433039188385}, "created_at": "2020-10-08 01:18:23.693916"}}