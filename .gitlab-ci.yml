stages:
 - build
 - test

build:
  stage: build
  image: docker:latest
  services: 
    - docker:dind
  script:
    - if [ "$( docker container inspect -f '{{.State.Running}}' vane )" == "true" ]; then docker stop vane; fi
    - docker build . -f ci/Dockerfile.ci -t vane:latest --build-arg UID=$(id -u) --build-arg GID=$(id -g)
    - docker run -t -d --rm --name vane vane:latest
    - docker cp vane:/project/cov.xml .

unit_tests:
  stage: test
  script:
    - docker exec -i vane pwd
    #- docker exec -i vane bash -c "pytest --cov=/project/vane/bin --cov-report xml:cov.xml tests"
    - docker exec -i vane bash -c "pytest --cov=/project/vane/bin tests"
    - docker exec -i vane bash -c "ls"
    #- docker cp vane:/project/cov.xml .
    - ls
  #artifacts:
  #  reports:
  #    cobertura: /project/cov.xml
 
system_tests:
  stage: test
  script:
    - docker exec -i vane pwd
    - docker exec -i vane bash -c "ls /project/vane"
    - docker exec -i vane bash -c "ls /project/vane/bin"
    - docker exec -i vane bash -c "ls /project/vane/reports"
    # - docker exec -i vane bash -c "cd /project/vane/bin && ./vane.py"
