<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="21" time="13.469" timestamp="2022-03-31T03:05:37.846580" hostname="c8e172b838c1"><testcase classname="tests.systests.api.test_api.APITests" name="test_if_management_https_api_server_is_running_on_[BL1]" time="0.368" /><testcase classname="tests.systests.api.test_api.APITests" name="test_if_management_https_api_server_port_is_correct_on_[BL1]" time="0.264" /><testcase classname="tests.systests.api.test_api.APITests" name="test_if_management_https_api_server_is_enabled_on_[BL1]" time="0.263" /><testcase classname="tests.systests.api.test_api.APITests" name="test_if_management_http_api_server_is_running_on_[BL1]" time="0.261" /><testcase classname="tests.systests.api.test_api.APITests" name="test_if_management_local_http_api_server_is_running_on_[BL1]" time="0.264" /><testcase classname="tests.systests.cpu.test_cpu.CPUTests" name="test_1_sec_cpu_utlization_on_[BL1]" time="0.385" /><testcase classname="tests.systests.cpu.test_cpu.CPUTests" name="test_1_min_cpu_utlization_on_[BL1]" time="0.383" /><testcase classname="tests.systests.cpu.test_cpu.CPUTests" name="test_5_min_cpu_utlization_on_[BL1]" time="0.383" /><testcase classname="tests.systests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_running_on_[BL1]" time="0.280" /><testcase classname="tests.systests.daemon.test_daemon.DaemonTests" name="test_if_daemons_are_enabled_on_[BL1]" time="0.253" /><testcase classname="tests.systests.filesystem.test_filesystem.FileSystemTests" name="test_if_files_on_[BL1]" time="1.024" /><testcase classname="tests.systests.host.test_host.HostTests" name="test_if_hostname_is_correcet_on_[BL1]" time="0.255" /><testcase classname="tests.systests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_protocol_status_is_connected_on_[BL1]" time="0.281" /><testcase classname="tests.systests.interface.test_interface.InterfaceStatusTests" name="test_if_intf_link_status_is_connected_on_[BL1]" time="0.285" /><testcase classname="tests.systests.log.test_logging.LoggingTests" name="test_if_log_messages_appear_on_[BL1]" time="0.332" /><testcase classname="tests.systests.memory.test_memory.MemoryTests" name="test_memory_utilization_on_[BL1]" time="0.256" /><testcase classname="tests.systests.system.test_system.CrashTests" name="test_if_there_is_agents_have_crashed_on_[BL1]" time="0.899"><failure message="assert 413 &lt;= 0&#10; +  where 413 = &lt;vane.tests_tools.TestOps object at 0x7f583970c790&gt;.actual_output&#10; +  and   0 = &lt;vane.tests_tools.TestOps object at 0x7f583970c790&gt;.expected_output">self = &lt;systests.system.test_system.CrashTests object at 0x7f583987c910&gt;
dut = {'connection': Node(connection=EapiConnection(transport=https://10.255.74.38:443//command-api)), 'mgmt_ip': '10.255.74...'Ethernet1', 'port': 'Ethernet1'}, {'neighborDevice': 'leaf2', 'neighborPort': 'Ethernet1', 'port': 'Ethernet2'}], ...}
tests_definitions = {'test_suites': [{'name': 'test_aaa.py', 'testcases': [{'comment': None, 'description': 'Verify AAA counters are worki...ted_output': 'ok', 'name': 'test_if_fan_status_is_in_spec_on_', 'show_cmd': 'show system environment cooling'}]}, ...]}

    def test_if_there_is_agents_have_crashed_on_(self, dut, tests_definitions):
        """Verifies the agents logs crash is empty
    
        Args:
          dut (dict): Encapsulates dut details including name, connection
        """
    
        tops = tests_tools.TestOps(tests_definitions, TEST_SUITE, dut)
        tops.return_show_cmd("show agent logs crash")
        lines = tops.show_cmd_txt.split("\n")
        tops.actual_output = len(lines) - 1
    
        tops.test_result = tops.actual_output &lt;= tops.expected_output
    
        tops.output_msg = (
            f"\nOn router |{tops.dut_name}| has "
            f"|{tops.actual_output}| agent crashes"
            " correct number of agent crashes is "
            f"|{tops.expected_output}|.\n"
        )
        tops.comment = (
            f"TEST number of agent crashes on |{tops.dut_name}|.\n"
            f"GIVEN |{tops.expected_output}| agent crashes.\n"
            f"WHEN |{tops.actual_output}| agent crashes.\n"
            f"THEN test case result is |{tops.test_result}|.\n"
            f"OUTPUT of |{tops.show_cmd}| is:\n{tops.show_cmd_txt}"
            ".\n"
        )
    
        print(f"{tops.output_msg}\n{tops.comment}")
    
        tops.post_testcase()
    
&gt;       assert tops.actual_output &lt;= tops.expected_output
E       assert 413 &lt;= 0
E        +  where 413 = &lt;vane.tests_tools.TestOps object at 0x7f583970c790&gt;.actual_output
E        +  and   0 = &lt;vane.tests_tools.TestOps object at 0x7f583970c790&gt;.expected_output

tests/systests/system/test_system.py:86: AssertionError</failure></testcase><testcase classname="tests.systests.system.test_system.SystemTests" name="test_if_eos_version_is_correct_on_[BL1]" time="0.255" /><testcase classname="tests.systests.users.test_users.UsersTests" name="test_if_usernames_are_configured_on_[BL1]" time="0.257" /><testcase classname="tests.systests.ztp.test_ztp.ZTPTests" name="test_if_zerotouch_is_disabled_on_[BL1]" time="0.254" /><testcase classname="tests.systests.ztp.test_ztp.ZTPTests" name="test_for_zerotouch_config_file_on_[BL1]" time="0.256" /></testsuite></testsuites>